DIGEST 43676cff8880b0b36b91dce342fcceb3
FLF.Imp
R863:871 Coq.Bool.Bool <> <> lib
R898:905 Coq.Init.Nat <> <> lib
R932:942 Coq.Arith.Arith <> <> lib
R969:979 Coq.Arith.EqNat <> <> lib
R1006:1008 Coq.micromega.Lia <> <> lib
R1035:1044 Coq.Lists.List <> <> lib
R1071:1084 Coq.Strings.String <> <> lib
R1133:1136 LF.Maps <> <> lib
mod 1622:1625 <> AExp
ind 1742:1745 AExp aexp
constr 1761:1764 AExp ANum
constr 1780:1784 AExp APlus
constr 1805:1810 AExp AMinus
constr 1831:1835 AExp AMult
R1771:1773 Coq.Init.Datatypes <> nat ind
binder 1767:1767 <> n:3
R1795:1798 LF.Imp <> aexp:1 ind
binder 1787:1788 <> a1:4
binder 1790:1791 <> a2:5
R1821:1824 LF.Imp <> aexp:1 ind
binder 1813:1814 <> a1:6
binder 1816:1817 <> a2:7
R1846:1849 LF.Imp <> aexp:1 ind
binder 1838:1839 <> a1:8
binder 1841:1842 <> a2:9
ind 1864:1867 AExp bexp
constr 1883:1887 AExp BTrue
constr 1893:1898 AExp BFalse
constr 1904:1906 AExp BEq
constr 1927:1929 AExp BLe
constr 1950:1953 AExp BNot
constr 1970:1973 AExp BAnd
R1917:1920 LF.Imp AExp aexp ind
binder 1909:1910 <> a1:12
binder 1912:1913 <> a2:13
R1940:1943 LF.Imp AExp aexp ind
binder 1932:1933 <> a1:14
binder 1935:1936 <> a2:15
R1960:1963 LF.Imp <> bexp:10 ind
binder 1956:1956 <> b:16
R1984:1987 LF.Imp <> bexp:10 ind
binder 1976:1977 <> b1:17
binder 1979:1980 <> b2:18
def 4605:4609 AExp aeval
R4616:4619 LF.Imp AExp aexp ind
binder 4612:4612 <> a:19
R4624:4626 Coq.Init.Datatypes <> nat ind
R4639:4639 LF.Imp <> a:19 var
R4650:4653 LF.Imp AExp ANum constr
R4666:4670 LF.Imp AExp APlus constr
R4682:4682 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4691:4695 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4704:4704 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4683:4687 LF.Imp <> aeval:20 def
R4696:4700 LF.Imp <> aeval:20 def
R4710:4715 LF.Imp AExp AMinus constr
R4726:4726 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R4735:4739 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R4748:4748 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R4727:4731 LF.Imp <> aeval:20 def
R4740:4744 LF.Imp <> aeval:20 def
R4754:4758 LF.Imp AExp AMult constr
R4770:4770 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R4779:4783 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R4792:4792 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R4771:4775 LF.Imp <> aeval:20 def
R4784:4788 LF.Imp <> aeval:20 def
def 4810:4820 AExp test_aeval1
R4856:4858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4825:4829 LF.Imp AExp aeval def
R4832:4836 LF.Imp AExp APlus constr
R4848:4851 LF.Imp AExp ANum constr
R4839:4842 LF.Imp AExp ANum constr
def 4966:4970 AExp beval
R4977:4980 LF.Imp AExp bexp ind
binder 4973:4973 <> b:22
R4985:4988 Coq.Init.Datatypes <> bool ind
R5001:5001 LF.Imp <> b:22 var
R5012:5016 LF.Imp AExp BTrue constr
R5027:5030 Coq.Init.Datatypes <> true constr
R5036:5041 LF.Imp AExp BFalse constr
R5051:5055 Coq.Init.Datatypes <> false constr
R5061:5063 LF.Imp AExp BEq constr
R5076:5076 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5085:5090 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5099:5099 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5077:5081 LF.Imp AExp aeval def
R5091:5095 LF.Imp AExp aeval def
R5105:5107 LF.Imp AExp BLe constr
R5120:5120 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5129:5135 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5144:5144 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5121:5125 LF.Imp AExp aeval def
R5136:5140 LF.Imp AExp aeval def
R5150:5153 LF.Imp AExp BNot constr
R5165:5168 Coq.Init.Datatypes <> negb def
R5171:5175 LF.Imp <> beval:23 def
R5185:5188 LF.Imp AExp BAnd constr
R5200:5203 Coq.Init.Datatypes <> andb def
R5217:5221 LF.Imp <> beval:23 def
R5206:5210 LF.Imp <> beval:23 def
def 5632:5645 AExp optimize_0plus
R5650:5653 LF.Imp AExp aexp ind
binder 5648:5648 <> a:25
R5658:5661 LF.Imp AExp aexp ind
R5674:5674 LF.Imp <> a:25 var
R5685:5688 LF.Imp AExp ANum constr
R5695:5698 LF.Imp AExp ANum constr
R5706:5710 LF.Imp AExp APlus constr
R5713:5716 LF.Imp AExp ANum constr
R5727:5740 LF.Imp <> optimize_0plus:26 def
R5749:5753 LF.Imp AExp APlus constr
R5765:5769 LF.Imp AExp APlus constr
R5793:5806 LF.Imp <> optimize_0plus:26 def
R5773:5786 LF.Imp <> optimize_0plus:26 def
R5816:5821 LF.Imp AExp AMinus constr
R5832:5837 LF.Imp AExp AMinus constr
R5860:5873 LF.Imp <> optimize_0plus:26 def
R5840:5853 LF.Imp <> optimize_0plus:26 def
R5883:5887 LF.Imp AExp AMult constr
R5899:5903 LF.Imp AExp AMult constr
R5927:5940 LF.Imp <> optimize_0plus:26 def
R5907:5920 LF.Imp <> optimize_0plus:26 def
def 6093:6111 AExp test_optimize_0plus
R6245:6249 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6116:6129 LF.Imp AExp optimize_0plus def
R6132:6136 LF.Imp AExp APlus constr
R6172:6176 LF.Imp AExp APlus constr
R6219:6223 LF.Imp AExp APlus constr
R6235:6238 LF.Imp AExp ANum constr
R6226:6229 LF.Imp AExp ANum constr
R6179:6182 LF.Imp AExp ANum constr
R6139:6142 LF.Imp AExp ANum constr
R6250:6254 LF.Imp AExp APlus constr
R6266:6269 LF.Imp AExp ANum constr
R6257:6260 LF.Imp AExp ANum constr
prf 6489:6508 AExp optimize_0plus_sound
binder 6518:6518 <> a:28
R6547:6549 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6523:6527 LF.Imp AExp aeval def
R6530:6543 LF.Imp AExp optimize_0plus def
R6545:6545 LF.Imp <> a:28 var
R6550:6554 LF.Imp AExp aeval def
R6556:6556 LF.Imp <> a:28 var
prf 8697:8702 AExp silly1
binder 8713:8714 <> ae:29
R8725:8727 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8717:8721 LF.Imp AExp aeval def
R8723:8724 LF.Imp <> ae:29 var
R8728:8732 LF.Imp AExp aeval def
R8734:8735 LF.Imp <> ae:29 var
prf 8812:8817 AExp silly2
binder 8829:8829 <> P:30
R8841:8844 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8845:8845 LF.Imp <> P:30 var
R8840:8840 LF.Imp <> P:30 var
prf 9586:9588 AExp foo
binder 9599:9599 <> n:31
R9609:9611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9603:9607 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R9608:9608 LF.Imp <> n:31 var
R9612:9615 Coq.Init.Datatypes <> true constr
prf 9862:9865 AExp foo'
binder 9876:9876 <> n:32
R9886:9888 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9880:9884 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R9885:9885 LF.Imp <> n:32 var
R9889:9892 Coq.Init.Datatypes <> true constr
prf 10229:10249 AExp optimize_0plus_sound'
binder 10259:10259 <> a:33
R10288:10290 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10264:10268 LF.Imp AExp aeval def
R10271:10284 LF.Imp AExp optimize_0plus def
R10286:10286 LF.Imp <> a:33 var
R10291:10295 LF.Imp AExp aeval def
R10297:10297 LF.Imp <> a:33 var
prf 13130:13151 AExp optimize_0plus_sound''
binder 13161:13161 <> a:34
R13190:13192 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13166:13170 LF.Imp AExp aeval def
R13173:13186 LF.Imp AExp optimize_0plus def
R13188:13188 LF.Imp <> a:34 var
R13193:13197 LF.Imp AExp aeval def
R13199:13199 LF.Imp <> a:34 var
prf 14584:14587 AExp In10
R14591:14592 Coq.Lists.List <> In def
R14597:14597 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14599:14599 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14601:14601 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14603:14603 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14605:14605 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14607:14607 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14609:14609 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14611:14611 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14613:14613 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14615:14615 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14618:14618 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 14883:14887 AExp In10'
R14891:14892 Coq.Lists.List <> In def
R14897:14897 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14899:14899 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14901:14901 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14903:14903 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14905:14905 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14907:14907 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14909:14909 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14911:14911 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14913:14913 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14915:14915 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14918:14918 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 15241:15251 AExp repeat_loop
R15269:15271 Coq.Init.Datatypes <> nat ind
binder 15263:15263 <> m:35
binder 15265:15265 <> n:36
R15284:15286 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15280:15282 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R15279:15279 LF.Imp <> m:35 var
R15283:15283 LF.Imp <> n:36 var
R15288:15290 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R15287:15287 LF.Imp <> n:36 var
R15291:15291 LF.Imp <> m:35 var
def 16389:16404 AExp optimize_0plus_b
R16411:16414 LF.Imp AExp bexp ind
binder 16407:16407 <> b:37
R16419:16422 LF.Imp AExp bexp ind
R16435:16435 LF.Imp <> b:37 var
R16446:16450 LF.Imp AExp BTrue constr
R16455:16459 LF.Imp AExp BTrue constr
R16465:16470 LF.Imp AExp BFalse constr
R16475:16480 LF.Imp AExp BFalse constr
R16486:16488 LF.Imp AExp BEq constr
R16499:16501 LF.Imp AExp BEq constr
R16524:16537 LF.Imp AExp optimize_0plus def
R16504:16517 LF.Imp AExp optimize_0plus def
R16547:16549 LF.Imp AExp BLe constr
R16560:16562 LF.Imp AExp BLe constr
R16585:16598 LF.Imp AExp optimize_0plus def
R16565:16578 LF.Imp AExp optimize_0plus def
R16608:16611 LF.Imp AExp BNot constr
R16618:16621 LF.Imp AExp BNot constr
R16624:16639 LF.Imp <> optimize_0plus_b:38 def
R16641:16641 LF.Imp <> b:37 var
R16648:16651 LF.Imp AExp BAnd constr
R16662:16665 LF.Imp AExp BAnd constr
R16690:16705 LF.Imp <> optimize_0plus_b:38 def
R16668:16683 LF.Imp <> optimize_0plus_b:38 def
prf 16727:16748 AExp optimize_0plus_b_sound
binder 16759:16759 <> b:40
R16790:16792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16764:16768 LF.Imp AExp beval def
R16771:16786 LF.Imp AExp optimize_0plus_b def
R16788:16788 LF.Imp <> b:40 var
R16793:16797 LF.Imp AExp beval def
R16799:16799 LF.Imp <> b:40 var
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
R16849:16868 LF.Imp AExp optimize_0plus_sound thm
def 19955:19978 AExp silly_presburger_example
binder 19989:19989 <> m:41
binder 19991:19991 <> n:42
binder 19993:19993 <> o:43
binder 19995:19995 <> p:44
R20031:20036 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20038:20041 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R20037:20037 LF.Imp <> m:41 var
R20042:20042 LF.Imp <> p:44 var
R20014:20017 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20005:20008 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R20001:20003 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20000:20000 LF.Imp <> m:41 var
R20004:20004 LF.Imp <> n:42 var
R20010:20012 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20009:20009 LF.Imp <> n:42 var
R20013:20013 LF.Imp <> o:43 var
R20023:20025 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20019:20021 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20018:20018 LF.Imp <> o:43 var
R20027:20029 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20026:20026 LF.Imp <> p:44 var
def 20081:20096 AExp plus_comm__omega
binder 20107:20107 <> m:45
binder 20109:20109 <> n:46
R20121:20123 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20117:20119 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20116:20116 LF.Imp <> m:45 var
R20120:20120 LF.Imp <> n:46 var
R20125:20127 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20124:20124 LF.Imp <> n:46 var
R20128:20128 LF.Imp <> m:45 var
def 20167:20183 AExp plus_assoc__omega
binder 20194:20194 <> m:47
binder 20196:20196 <> n:48
binder 20198:20198 <> p:49
R20216:20218 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20206:20209 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20215:20215 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20205:20205 LF.Imp <> m:47 var
R20211:20213 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20210:20210 LF.Imp <> n:48 var
R20214:20214 LF.Imp <> p:49 var
R20224:20226 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20220:20222 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R20219:20219 LF.Imp <> m:47 var
R20223:20223 LF.Imp <> n:48 var
R20227:20227 LF.Imp <> p:49 var
mod 22175:22190 <> AExp.aevalR_first_try
ind 22204:22209 AExp.aevalR_first_try aevalR
constr 22240:22245 AExp.aevalR_first_try E_ANum
constr 22279:22285 AExp.aevalR_first_try E_APlus
constr 22401:22408 AExp.aevalR_first_try E_AMinus
constr 22525:22531 AExp.aevalR_first_try E_AMult
R22217:22220 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22224:22227 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22221:22223 Coq.Init.Datatypes <> nat ind
R22213:22216 LF.Imp AExp aexp ind
binder 22247:22247 <> n:52
R22257:22262 LF.Imp <> aevalR:50 ind
R22273:22273 LF.Imp <> n:52 var
R22265:22268 LF.Imp AExp ANum constr
R22270:22270 LF.Imp <> n:52 var
R22295:22298 LF.Imp AExp aexp ind
binder 22288:22289 <> e1:53
binder 22291:22292 <> e2:54
R22309:22311 Coq.Init.Datatypes <> nat ind
binder 22302:22303 <> n1:55
binder 22305:22306 <> n2:56
R22334:22343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22356:22365 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22366:22371 LF.Imp <> aevalR:50 ind
R22390:22392 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R22388:22389 LF.Imp <> n1:55 var
R22393:22394 LF.Imp <> n2:56 var
R22374:22378 LF.Imp AExp APlus constr
R22383:22384 LF.Imp <> e2:54 var
R22380:22381 LF.Imp <> e1:53 var
R22344:22349 LF.Imp <> aevalR:50 ind
R22354:22355 LF.Imp <> n2:56 var
R22351:22352 LF.Imp <> e2:54 var
R22322:22327 LF.Imp <> aevalR:50 ind
R22332:22333 LF.Imp <> n1:55 var
R22329:22330 LF.Imp <> e1:53 var
R22418:22421 LF.Imp AExp aexp ind
binder 22411:22412 <> e1:57
binder 22414:22415 <> e2:58
R22432:22434 Coq.Init.Datatypes <> nat ind
binder 22425:22426 <> n1:59
binder 22428:22429 <> n2:60
R22457:22466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22479:22488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22489:22494 LF.Imp <> aevalR:50 ind
R22514:22516 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R22512:22513 LF.Imp <> n1:59 var
R22517:22518 LF.Imp <> n2:60 var
R22497:22502 LF.Imp AExp AMinus constr
R22507:22508 LF.Imp <> e2:58 var
R22504:22505 LF.Imp <> e1:57 var
R22467:22472 LF.Imp <> aevalR:50 ind
R22477:22478 LF.Imp <> n2:60 var
R22474:22475 LF.Imp <> e2:58 var
R22445:22450 LF.Imp <> aevalR:50 ind
R22455:22456 LF.Imp <> n1:59 var
R22452:22453 LF.Imp <> e1:57 var
R22541:22544 LF.Imp AExp aexp ind
binder 22534:22535 <> e1:61
binder 22537:22538 <> e2:62
R22555:22557 Coq.Init.Datatypes <> nat ind
binder 22548:22549 <> n1:63
binder 22551:22552 <> n2:64
R22580:22589 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22602:22611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22612:22617 LF.Imp <> aevalR:50 ind
R22636:22638 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R22634:22635 LF.Imp <> n1:63 var
R22639:22640 LF.Imp <> n2:64 var
R22620:22624 LF.Imp AExp AMult constr
R22629:22630 LF.Imp <> e2:62 var
R22626:22627 LF.Imp <> e1:61 var
R22590:22595 LF.Imp <> aevalR:50 ind
R22600:22601 LF.Imp <> n2:64 var
R22597:22598 LF.Imp <> e2:62 var
R22568:22573 LF.Imp <> aevalR:50 ind
R22578:22579 LF.Imp <> n1:63 var
R22575:22576 LF.Imp <> e1:61 var
mod 22652:22666 <> AExp.aevalR_first_try.HypothesisNames
ind 22830:22835 AExp.aevalR_first_try.HypothesisNames aevalR
constr 22866:22871 AExp.aevalR_first_try.HypothesisNames E_ANum
constr 22905:22911 AExp.aevalR_first_try.HypothesisNames E_APlus
constr 23035:23042 AExp.aevalR_first_try.HypothesisNames E_AMinus
constr 23167:23173 AExp.aevalR_first_try.HypothesisNames E_AMult
R22843:22846 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22850:22853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22847:22849 Coq.Init.Datatypes <> nat ind
R22839:22842 LF.Imp AExp aexp ind
binder 22873:22873 <> n:67
R22883:22888 LF.Imp <> aevalR:65 ind
R22899:22899 LF.Imp <> n:67 var
R22891:22894 LF.Imp AExp ANum constr
R22896:22896 LF.Imp <> n:67 var
R22921:22924 LF.Imp AExp aexp ind
binder 22914:22915 <> e1:68
binder 22917:22918 <> e2:69
R22935:22937 Coq.Init.Datatypes <> nat ind
binder 22928:22929 <> n1:70
binder 22931:22932 <> n2:71
R22952:22957 LF.Imp <> aevalR:65 ind
R22962:22963 LF.Imp <> n1:70 var
R22959:22960 LF.Imp <> e1:68 var
binder 22947:22948 <> H1:72
R22978:22983 LF.Imp <> aevalR:65 ind
R22988:22989 LF.Imp <> n2:71 var
R22985:22986 LF.Imp <> e2:69 var
binder 22973:22974 <> H2:73
R23000:23005 LF.Imp <> aevalR:65 ind
R23024:23026 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23022:23023 LF.Imp <> n1:70 var
R23027:23028 LF.Imp <> n2:71 var
R23008:23012 LF.Imp AExp APlus constr
R23017:23018 LF.Imp <> e2:69 var
R23014:23015 LF.Imp <> e1:68 var
R23052:23055 LF.Imp AExp aexp ind
binder 23045:23046 <> e1:74
binder 23048:23049 <> e2:75
R23066:23068 Coq.Init.Datatypes <> nat ind
binder 23059:23060 <> n1:76
binder 23062:23063 <> n2:77
R23083:23088 LF.Imp <> aevalR:65 ind
R23093:23094 LF.Imp <> n1:76 var
R23090:23091 LF.Imp <> e1:74 var
binder 23078:23079 <> H1:78
R23109:23114 LF.Imp <> aevalR:65 ind
R23119:23120 LF.Imp <> n2:77 var
R23116:23117 LF.Imp <> e2:75 var
binder 23104:23105 <> H2:79
R23131:23136 LF.Imp <> aevalR:65 ind
R23156:23158 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R23154:23155 LF.Imp <> n1:76 var
R23159:23160 LF.Imp <> n2:77 var
R23139:23144 LF.Imp AExp AMinus constr
R23149:23150 LF.Imp <> e2:75 var
R23146:23147 LF.Imp <> e1:74 var
R23183:23186 LF.Imp AExp aexp ind
binder 23176:23177 <> e1:80
binder 23179:23180 <> e2:81
R23197:23199 Coq.Init.Datatypes <> nat ind
binder 23190:23191 <> n1:82
binder 23193:23194 <> n2:83
R23214:23219 LF.Imp <> aevalR:65 ind
R23224:23225 LF.Imp <> n1:82 var
R23221:23222 LF.Imp <> e1:80 var
binder 23209:23210 <> H1:84
R23240:23245 LF.Imp <> aevalR:65 ind
R23250:23251 LF.Imp <> n2:83 var
R23247:23248 LF.Imp <> e2:81 var
binder 23235:23236 <> H2:85
R23262:23267 LF.Imp <> aevalR:65 ind
R23286:23288 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R23284:23285 LF.Imp <> n1:82 var
R23289:23290 LF.Imp <> n2:83 var
R23270:23274 LF.Imp AExp AMult constr
R23279:23280 LF.Imp <> e2:81 var
R23276:23277 LF.Imp <> e1:80 var
R23474:23488 LF.Imp AExp.aevalR_first_try.HypothesisNames <> mod
R23690:23695 LF.Imp AExp.aevalR_first_try aevalR ind
not 23665:23665 AExp.aevalR_first_try ::type_scope:x_'==>'_x
R23776:23791 LF.Imp AExp.aevalR_first_try <> mod
ind 24030:24035 AExp aevalR
constr 24066:24071 AExp E_ANum
constr 24110:24116 AExp E_APlus
constr 24217:24224 AExp E_AMinus
constr 24326:24332 AExp E_AMult
R24043:24046 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24050:24053 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24047:24049 Coq.Init.Datatypes <> nat ind
R24039:24042 LF.Imp AExp aexp ind
R24454:24459 LF.Imp <> aevalR:87 ind
R24078:24080 Coq.Init.Datatypes <> nat ind
binder 24074:24074 <> n:88
R24091:24091 LF.Imp AExp ::type_scope:x_'==>'_x not
R24098:24103 LF.Imp AExp ::type_scope:x_'==>'_x not
R24092:24095 LF.Imp AExp ANum constr
R24097:24097 LF.Imp <> n:88 var
R24104:24104 LF.Imp <> n:88 var
R24127:24130 LF.Imp AExp aexp ind
binder 24119:24120 <> e1:89
binder 24122:24123 <> e2:90
R24142:24144 Coq.Init.Datatypes <> nat ind
binder 24134:24135 <> n1:91
binder 24137:24138 <> n2:92
R24155:24155 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24165:24169 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24170:24170 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24180:24184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24185:24185 LF.Imp AExp ::type_scope:x_'==>'_x not
R24197:24203 LF.Imp AExp ::type_scope:x_'==>'_x not
R24211:24211 LF.Imp AExp ::type_scope:x_'==>'_x not
R24186:24190 LF.Imp AExp APlus constr
R24195:24196 LF.Imp <> e2:90 var
R24192:24193 LF.Imp <> e1:89 var
R24206:24208 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R24204:24205 LF.Imp <> n1:91 var
R24209:24210 LF.Imp <> n2:92 var
R24173:24177 LF.Imp AExp ::type_scope:x_'==>'_x not
R24171:24172 LF.Imp <> e2:90 var
R24178:24179 LF.Imp <> n2:92 var
R24158:24162 LF.Imp AExp ::type_scope:x_'==>'_x not
R24156:24157 LF.Imp <> e1:89 var
R24163:24164 LF.Imp <> n1:91 var
R24235:24238 LF.Imp AExp aexp ind
binder 24227:24228 <> e1:93
binder 24230:24231 <> e2:94
R24250:24252 Coq.Init.Datatypes <> nat ind
binder 24242:24243 <> n1:95
binder 24245:24246 <> n2:96
R24263:24263 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24273:24277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24278:24278 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24288:24292 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24293:24293 LF.Imp AExp ::type_scope:x_'==>'_x not
R24306:24312 LF.Imp AExp ::type_scope:x_'==>'_x not
R24320:24320 LF.Imp AExp ::type_scope:x_'==>'_x not
R24294:24299 LF.Imp AExp AMinus constr
R24304:24305 LF.Imp <> e2:94 var
R24301:24302 LF.Imp <> e1:93 var
R24315:24317 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R24313:24314 LF.Imp <> n1:95 var
R24318:24319 LF.Imp <> n2:96 var
R24281:24285 LF.Imp AExp ::type_scope:x_'==>'_x not
R24279:24280 LF.Imp <> e2:94 var
R24286:24287 LF.Imp <> n2:96 var
R24266:24270 LF.Imp AExp ::type_scope:x_'==>'_x not
R24264:24265 LF.Imp <> e1:93 var
R24271:24272 LF.Imp <> n1:95 var
R24343:24346 LF.Imp AExp aexp ind
binder 24335:24336 <> e1:97
binder 24338:24339 <> e2:98
R24358:24360 Coq.Init.Datatypes <> nat ind
binder 24350:24351 <> n1:99
binder 24353:24354 <> n2:100
R24371:24371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24381:24385 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24386:24386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24396:24400 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24401:24401 LF.Imp AExp ::type_scope:x_'==>'_x not
R24413:24419 LF.Imp AExp ::type_scope:x_'==>'_x not
R24427:24427 LF.Imp AExp ::type_scope:x_'==>'_x not
R24402:24406 LF.Imp AExp AMult constr
R24411:24412 LF.Imp <> e2:98 var
R24408:24409 LF.Imp <> e1:97 var
R24422:24424 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R24420:24421 LF.Imp <> n1:99 var
R24425:24426 LF.Imp <> n2:100 var
R24389:24393 LF.Imp AExp ::type_scope:x_'==>'_x not
R24387:24388 LF.Imp <> e2:98 var
R24394:24395 LF.Imp <> n2:100 var
R24374:24378 LF.Imp AExp ::type_scope:x_'==>'_x not
R24372:24373 LF.Imp <> e1:97 var
R24379:24380 LF.Imp <> n1:99 var
R24454:24459 LF.Imp AExp aevalR ind
not 24438:24438 AExp ::type_scope:x_'==>'_x
def 27710:27737 AExp manual_grade_for_beval_rules
R27741:27746 Coq.Init.Datatypes <> option ind
R27752:27752 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R27749:27751 Coq.Init.Datatypes <> nat ind
R27753:27758 Coq.Strings.String <> string ind
R27764:27767 Coq.Init.Datatypes <> None constr
prf 28014:28029 AExp aeval_iff_aevalR
binder 28040:28040 <> a:101
binder 28042:28042 <> n:102
R28047:28047 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28055:28060 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28049:28053 LF.Imp AExp ::type_scope:x_'==>'_x not
R28048:28048 LF.Imp <> a:101 var
R28054:28054 LF.Imp <> n:102 var
R28068:28070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28061:28065 LF.Imp AExp aeval def
R28067:28067 LF.Imp <> a:101 var
R28071:28071 LF.Imp <> n:102 var
R28515:28520 LF.Imp AExp E_ANum constr
R28515:28520 LF.Imp AExp E_ANum constr
R28551:28557 LF.Imp AExp E_APlus constr
R28551:28557 LF.Imp AExp E_APlus constr
R28651:28658 LF.Imp AExp E_AMinus constr
R28651:28658 LF.Imp AExp E_AMinus constr
R28751:28757 LF.Imp AExp E_AMult constr
R28751:28757 LF.Imp AExp E_AMult constr
prf 28923:28939 AExp aeval_iff_aevalR'
binder 28950:28950 <> a:103
binder 28952:28952 <> n:104
R28957:28957 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28965:28970 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28959:28963 LF.Imp AExp ::type_scope:x_'==>'_x not
R28958:28958 LF.Imp <> a:103 var
R28964:28964 LF.Imp <> n:104 var
R28978:28980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28971:28975 LF.Imp AExp aeval def
R28977:28977 LF.Imp <> a:103 var
R28981:28981 LF.Imp <> n:104 var
ind 29472:29477 AExp bevalR
constr 29508:29514 AExp E_Btrue
constr 29540:29547 AExp E_Bfalse
constr 29575:29579 AExp E_BEq
constr 29662:29666 AExp E_BLe
constr 29748:29753 AExp E_BNot
constr 29807:29812 AExp E_BAnd
R29484:29487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29492:29495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29488:29491 Coq.Init.Datatypes <> bool ind
R29480:29483 LF.Imp AExp bexp ind
R29913:29918 LF.Imp <> bevalR:106 ind
R29518:29523 LF.Imp <> bevalR:105 ind
R29531:29534 Coq.Init.Datatypes <> true constr
R29525:29529 LF.Imp AExp BTrue constr
R29551:29556 LF.Imp <> bevalR:105 ind
R29565:29569 Coq.Init.Datatypes <> false constr
R29558:29563 LF.Imp AExp BFalse constr
R29587:29590 LF.Imp AExp aexp ind
binder 29582:29582 <> a:107
binder 29584:29584 <> b:108
R29599:29601 Coq.Init.Datatypes <> nat ind
binder 29594:29594 <> n:109
binder 29596:29596 <> m:110
R29609:29613 LF.Imp AExp ::type_scope:x_'==>'_x not
R29608:29608 LF.Imp <> a:107 var
R29614:29614 LF.Imp <> n:109 var
binder 29604:29605 <> H1:111
R29623:29627 LF.Imp AExp ::type_scope:x_'==>'_x not
R29622:29622 LF.Imp <> b:108 var
R29628:29628 LF.Imp <> m:110 var
binder 29618:29619 <> H2:112
R29632:29637 LF.Imp <> bevalR:105 ind
R29651:29654 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R29650:29650 LF.Imp <> n:109 var
R29655:29655 LF.Imp <> m:110 var
R29640:29642 LF.Imp AExp BEq constr
R29646:29646 LF.Imp <> b:108 var
R29644:29644 LF.Imp <> a:107 var
R29674:29677 LF.Imp AExp aexp ind
binder 29669:29669 <> a:113
binder 29671:29671 <> b:114
R29686:29688 Coq.Init.Datatypes <> nat ind
binder 29681:29681 <> n:115
binder 29683:29683 <> m:116
R29695:29699 LF.Imp AExp ::type_scope:x_'==>'_x not
R29694:29694 LF.Imp <> a:113 var
R29700:29700 LF.Imp <> n:115 var
R29708:29712 LF.Imp AExp ::type_scope:x_'==>'_x not
R29707:29707 LF.Imp <> b:114 var
R29713:29713 LF.Imp <> m:116 var
R29717:29722 LF.Imp <> bevalR:105 ind
R29736:29740 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R29735:29735 LF.Imp <> n:115 var
R29741:29741 LF.Imp <> m:116 var
R29725:29727 LF.Imp AExp BLe constr
R29731:29731 LF.Imp <> b:114 var
R29729:29729 LF.Imp <> a:113 var
binder 29755:29755 <> a:117
binder 29757:29757 <> b:118
R29763:29768 LF.Imp <> bevalR:105 ind
R29772:29772 LF.Imp <> b:118 var
R29770:29770 LF.Imp <> a:117 var
R29777:29782 LF.Imp <> bevalR:105 ind
R29794:29797 Coq.Init.Datatypes <> negb def
R29799:29799 LF.Imp <> b:118 var
R29785:29788 LF.Imp AExp BNot constr
R29790:29790 LF.Imp <> a:117 var
binder 29814:29814 <> a:119
binder 29816:29816 <> b:120
binder 29818:29819 <> b1:121
binder 29821:29822 <> b2:122
R29828:29833 LF.Imp <> bevalR:105 ind
R29837:29838 LF.Imp <> b1:121 var
R29835:29835 LF.Imp <> a:119 var
R29845:29850 LF.Imp <> bevalR:105 ind
R29854:29855 LF.Imp <> b2:122 var
R29852:29852 LF.Imp <> b:120 var
R29859:29864 LF.Imp <> bevalR:105 ind
R29878:29881 Coq.Init.Datatypes <> andb def
R29886:29887 LF.Imp <> b2:122 var
R29883:29884 LF.Imp <> b1:121 var
R29867:29870 LF.Imp AExp BAnd constr
R29874:29874 LF.Imp <> b:120 var
R29872:29872 LF.Imp <> a:119 var
R29913:29918 LF.Imp AExp bevalR ind
not 29896:29896 AExp ::type_scope:x_'==>b'_x
prf 29947:29962 AExp beval_iff_bevalR
binder 29973:29973 <> b:123
binder 29975:29976 <> bv:124
R29990:29994 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29982:29987 LF.Imp AExp ::type_scope:x_'==>b'_x not
R29981:29981 LF.Imp <> b:123 var
R29988:29989 LF.Imp <> bv:124 var
R30002:30004 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29995:29999 LF.Imp AExp beval def
R30001:30001 LF.Imp <> b:123 var
R30005:30006 LF.Imp <> bv:124 var
R30110:30126 LF.Imp AExp aeval_iff_aevalR' thm
R30110:30126 LF.Imp AExp aeval_iff_aevalR' thm
R30110:30126 LF.Imp AExp aeval_iff_aevalR' thm
R30143:30159 LF.Imp AExp aeval_iff_aevalR' thm
R30143:30159 LF.Imp AExp aeval_iff_aevalR' thm
R30143:30159 LF.Imp AExp aeval_iff_aevalR' thm
R30221:30237 LF.Imp AExp aeval_iff_aevalR' thm
R30221:30237 LF.Imp AExp aeval_iff_aevalR' thm
R30221:30237 LF.Imp AExp aeval_iff_aevalR' thm
R30253:30269 LF.Imp AExp aeval_iff_aevalR' thm
R30253:30269 LF.Imp AExp aeval_iff_aevalR' thm
R30253:30269 LF.Imp AExp aeval_iff_aevalR' thm
R30494:30500 LF.Imp AExp E_Btrue constr
R30494:30500 LF.Imp AExp E_Btrue constr
R30515:30522 LF.Imp AExp E_Bfalse constr
R30515:30522 LF.Imp AExp E_Bfalse constr
R30537:30541 LF.Imp AExp E_BEq constr
R30537:30541 LF.Imp AExp E_BEq constr
R30550:30566 LF.Imp AExp aeval_iff_aevalR' thm
R30550:30566 LF.Imp AExp aeval_iff_aevalR' thm
R30588:30604 LF.Imp AExp aeval_iff_aevalR' thm
R30588:30604 LF.Imp AExp aeval_iff_aevalR' thm
R30632:30636 LF.Imp AExp E_BLe constr
R30632:30636 LF.Imp AExp E_BLe constr
R30645:30661 LF.Imp AExp aeval_iff_aevalR' thm
R30645:30661 LF.Imp AExp aeval_iff_aevalR' thm
R30683:30699 LF.Imp AExp aeval_iff_aevalR' thm
R30683:30699 LF.Imp AExp aeval_iff_aevalR' thm
R30728:30733 LF.Imp AExp E_BNot constr
R30728:30733 LF.Imp AExp E_BNot constr
R30773:30778 LF.Imp AExp E_BAnd constr
R30798:30802 LF.Imp AExp beval def
R30787:30791 LF.Imp AExp beval def
R30773:30778 LF.Imp AExp E_BAnd constr
R30798:30802 LF.Imp AExp beval def
R30787:30791 LF.Imp AExp beval def
R30881:30884 LF.Imp AExp <> mod
mod 31347:31361 <> aevalR_division
ind 31474:31477 aevalR_division aexp
constr 31493:31496 aevalR_division ANum
constr 31512:31516 aevalR_division APlus
constr 31537:31542 aevalR_division AMinus
constr 31563:31567 aevalR_division AMult
constr 31588:31591 aevalR_division ADiv
R31503:31505 Coq.Init.Datatypes <> nat ind
binder 31499:31499 <> n:127
R31527:31530 LF.Imp <> aexp:125 ind
binder 31519:31520 <> a1:128
binder 31522:31523 <> a2:129
R31553:31556 LF.Imp <> aexp:125 ind
binder 31545:31546 <> a1:130
binder 31548:31549 <> a2:131
R31578:31581 LF.Imp <> aexp:125 ind
binder 31570:31571 <> a1:132
binder 31573:31574 <> a2:133
R31602:31605 LF.Imp <> aexp:125 ind
binder 31594:31595 <> a1:134
binder 31597:31598 <> a2:135
ind 31947:31952 aevalR_division aevalR
constr 31983:31988 aevalR_division E_ANum
constr 32027:32033 aevalR_division E_APlus
constr 32134:32141 aevalR_division E_AMinus
constr 32243:32249 aevalR_division E_AMult
constr 32350:32355 aevalR_division E_ADiv
R31960:31963 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31967:31970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31964:31966 Coq.Init.Datatypes <> nat ind
R31956:31959 LF.Imp aevalR_division aexp ind
R32535:32540 LF.Imp <> aevalR:137 ind
R31995:31997 Coq.Init.Datatypes <> nat ind
binder 31991:31991 <> n:138
R32008:32008 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32015:32020 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32009:32012 LF.Imp aevalR_division ANum constr
R32014:32014 LF.Imp <> n:138 var
R32021:32021 LF.Imp <> n:138 var
R32044:32047 LF.Imp aevalR_division aexp ind
binder 32036:32037 <> a1:139
binder 32039:32040 <> a2:140
R32059:32061 Coq.Init.Datatypes <> nat ind
binder 32051:32052 <> n1:141
binder 32054:32055 <> n2:142
R32072:32072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32082:32086 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32087:32087 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32097:32101 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32102:32102 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32114:32120 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32128:32128 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32103:32107 LF.Imp aevalR_division APlus constr
R32112:32113 LF.Imp <> a2:140 var
R32109:32110 LF.Imp <> a1:139 var
R32123:32125 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32121:32122 LF.Imp <> n1:141 var
R32126:32127 LF.Imp <> n2:142 var
R32090:32094 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32088:32089 LF.Imp <> a2:140 var
R32095:32096 LF.Imp <> n2:142 var
R32075:32079 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32073:32074 LF.Imp <> a1:139 var
R32080:32081 LF.Imp <> n1:141 var
R32152:32155 LF.Imp aevalR_division aexp ind
binder 32144:32145 <> a1:143
binder 32147:32148 <> a2:144
R32167:32169 Coq.Init.Datatypes <> nat ind
binder 32159:32160 <> n1:145
binder 32162:32163 <> n2:146
R32180:32180 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32190:32194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32195:32195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32205:32209 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32210:32210 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32223:32229 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32237:32237 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32211:32216 LF.Imp aevalR_division AMinus constr
R32221:32222 LF.Imp <> a2:144 var
R32218:32219 LF.Imp <> a1:143 var
R32232:32234 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R32230:32231 LF.Imp <> n1:145 var
R32235:32236 LF.Imp <> n2:146 var
R32198:32202 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32196:32197 LF.Imp <> a2:144 var
R32203:32204 LF.Imp <> n2:146 var
R32183:32187 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32181:32182 LF.Imp <> a1:143 var
R32188:32189 LF.Imp <> n1:145 var
R32260:32263 LF.Imp aevalR_division aexp ind
binder 32252:32253 <> a1:147
binder 32255:32256 <> a2:148
R32275:32277 Coq.Init.Datatypes <> nat ind
binder 32267:32268 <> n1:149
binder 32270:32271 <> n2:150
R32288:32288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32298:32302 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32303:32303 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32313:32317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32318:32318 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32330:32336 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32344:32344 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32319:32323 LF.Imp aevalR_division AMult constr
R32328:32329 LF.Imp <> a2:148 var
R32325:32326 LF.Imp <> a1:147 var
R32339:32341 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32337:32338 LF.Imp <> n1:149 var
R32342:32343 LF.Imp <> n2:150 var
R32306:32310 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32304:32305 LF.Imp <> a2:148 var
R32311:32312 LF.Imp <> n2:150 var
R32291:32295 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32289:32290 LF.Imp <> a1:147 var
R32296:32297 LF.Imp <> n1:149 var
R32366:32369 LF.Imp aevalR_division aexp ind
binder 32358:32359 <> a1:151
binder 32361:32362 <> a2:152
R32384:32386 Coq.Init.Datatypes <> nat ind
binder 32373:32374 <> n1:153
binder 32376:32377 <> n2:154
binder 32379:32380 <> n3:155
R32423:32423 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32433:32437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32438:32438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32448:32452 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32453:32453 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32460:32470 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32471:32471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32487:32491 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32492:32492 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32503:32508 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32493:32496 LF.Imp aevalR_division ADiv constr
R32501:32502 LF.Imp <> a2:152 var
R32498:32499 LF.Imp <> a1:151 var
R32509:32510 LF.Imp <> n3:155 var
R32482:32484 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32472:32475 Coq.Init.Peano <> mult syndef
R32480:32481 LF.Imp <> n3:155 var
R32477:32478 LF.Imp <> n2:154 var
R32485:32486 LF.Imp <> n1:153 var
R32456:32458 Coq.Init.Peano <> ::nat_scope:x_'>'_x not
R32454:32455 LF.Imp <> n2:154 var
R32441:32445 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32439:32440 LF.Imp <> a2:152 var
R32446:32447 LF.Imp <> n2:154 var
R32426:32430 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R32424:32425 LF.Imp <> a1:151 var
R32431:32432 LF.Imp <> n1:153 var
R32535:32540 LF.Imp aevalR_division aevalR ind
not 32519:32519 aevalR_division ::type_scope:x_'==>'_x
R32714:32728 LF.Imp aevalR_division <> mod
mod 32739:32753 <> aevalR_extended
ind 33225:33228 aevalR_extended aexp
constr 33244:33247 aevalR_extended AAny
constr 33294:33297 aevalR_extended ANum
constr 33313:33317 aevalR_extended APlus
constr 33338:33343 aevalR_extended AMinus
constr 33364:33368 aevalR_extended AMult
R33304:33306 Coq.Init.Datatypes <> nat ind
binder 33300:33300 <> n:158
R33328:33331 LF.Imp <> aexp:156 ind
binder 33320:33321 <> a1:159
binder 33323:33324 <> a2:160
R33354:33357 LF.Imp <> aexp:156 ind
binder 33346:33347 <> a1:161
binder 33349:33350 <> a2:162
R33379:33382 LF.Imp <> aexp:156 ind
binder 33371:33372 <> a1:163
binder 33374:33375 <> a2:164
ind 33579:33584 aevalR_extended aevalR
constr 33615:33619 aevalR_extended E_Any
constr 33692:33697 aevalR_extended E_ANum
constr 33736:33742 aevalR_extended E_APlus
constr 33843:33850 aevalR_extended E_AMinus
constr 33952:33958 aevalR_extended E_AMult
R33592:33595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33599:33602 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33596:33598 Coq.Init.Datatypes <> nat ind
R33588:33591 LF.Imp aevalR_extended aexp ind
R34078:34083 LF.Imp <> aevalR:166 ind
R33626:33628 Coq.Init.Datatypes <> nat ind
binder 33622:33622 <> n:167
R33643:33647 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33639:33642 LF.Imp aevalR_extended AAny constr
R33648:33648 LF.Imp <> n:167 var
R33704:33706 Coq.Init.Datatypes <> nat ind
binder 33700:33700 <> n:168
R33717:33717 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33724:33729 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33718:33721 LF.Imp aevalR_extended ANum constr
R33723:33723 LF.Imp <> n:168 var
R33730:33730 LF.Imp <> n:168 var
R33753:33756 LF.Imp aevalR_extended aexp ind
binder 33745:33746 <> a1:169
binder 33748:33749 <> a2:170
R33768:33770 Coq.Init.Datatypes <> nat ind
binder 33760:33761 <> n1:171
binder 33763:33764 <> n2:172
R33781:33781 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33791:33795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33796:33796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33806:33810 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33811:33811 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33823:33829 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33837:33837 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33812:33816 LF.Imp aevalR_extended APlus constr
R33821:33822 LF.Imp <> a2:170 var
R33818:33819 LF.Imp <> a1:169 var
R33832:33834 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33830:33831 LF.Imp <> n1:171 var
R33835:33836 LF.Imp <> n2:172 var
R33799:33803 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33797:33798 LF.Imp <> a2:170 var
R33804:33805 LF.Imp <> n2:172 var
R33784:33788 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33782:33783 LF.Imp <> a1:169 var
R33789:33790 LF.Imp <> n1:171 var
R33861:33864 LF.Imp aevalR_extended aexp ind
binder 33853:33854 <> a1:173
binder 33856:33857 <> a2:174
R33876:33878 Coq.Init.Datatypes <> nat ind
binder 33868:33869 <> n1:175
binder 33871:33872 <> n2:176
R33889:33889 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33899:33903 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33904:33904 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33914:33918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33919:33919 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33932:33938 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33946:33946 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33920:33925 LF.Imp aevalR_extended AMinus constr
R33930:33931 LF.Imp <> a2:174 var
R33927:33928 LF.Imp <> a1:173 var
R33941:33943 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R33939:33940 LF.Imp <> n1:175 var
R33944:33945 LF.Imp <> n2:176 var
R33907:33911 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33905:33906 LF.Imp <> a2:174 var
R33912:33913 LF.Imp <> n2:176 var
R33892:33896 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33890:33891 LF.Imp <> a1:173 var
R33897:33898 LF.Imp <> n1:175 var
R33969:33972 LF.Imp aevalR_extended aexp ind
binder 33961:33962 <> a1:177
binder 33964:33965 <> a2:178
R33984:33986 Coq.Init.Datatypes <> nat ind
binder 33976:33977 <> n1:179
binder 33979:33980 <> n2:180
R33997:33997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34007:34011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34012:34012 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34022:34026 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34027:34027 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R34039:34045 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R34053:34053 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R34028:34032 LF.Imp aevalR_extended AMult constr
R34037:34038 LF.Imp <> a2:178 var
R34034:34035 LF.Imp <> a1:177 var
R34048:34050 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R34046:34047 LF.Imp <> n1:179 var
R34051:34052 LF.Imp <> n2:180 var
R34015:34019 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R34013:34014 LF.Imp <> a2:178 var
R34020:34021 LF.Imp <> n2:180 var
R34000:34004 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33998:33999 LF.Imp <> a1:177 var
R34005:34006 LF.Imp <> n1:179 var
R34078:34083 LF.Imp aevalR_extended aevalR ind
not 34062:34062 aevalR_extended ::type_scope:x_'==>'_x
R34109:34123 LF.Imp aevalR_extended <> mod
def 36949:36953 <> state
R36958:36966 LF.Maps <> total_map def
R36968:36970 Coq.Init.Datatypes <> nat ind
ind 37191:37194 <> aexp
constr 37210:37213 <> ANum
constr 37229:37231 <> AId
constr 37278:37282 <> APlus
constr 37303:37308 <> AMinus
constr 37329:37333 <> AMult
R37220:37222 Coq.Init.Datatypes <> nat ind
binder 37216:37216 <> n:183
R37238:37243 Coq.Strings.String <> string ind
binder 37234:37234 <> x:184
R37293:37296 LF.Imp <> aexp:181 ind
binder 37285:37286 <> a1:185
binder 37288:37289 <> a2:186
R37319:37322 LF.Imp <> aexp:181 ind
binder 37311:37312 <> a1:187
binder 37314:37315 <> a2:188
R37344:37347 LF.Imp <> aexp:181 ind
binder 37336:37337 <> a1:189
binder 37339:37340 <> a2:190
def 37465:37465 <> W
R37469:37474 Coq.Strings.String <> string ind
def 37495:37495 <> X
R37499:37504 Coq.Strings.String <> string ind
def 37525:37525 <> Y
R37529:37534 Coq.Strings.String <> string ind
def 37555:37555 <> Z
R37559:37564 Coq.Strings.String <> string ind
ind 37957:37960 <> bexp
constr 37976:37980 <> BTrue
constr 37986:37991 <> BFalse
constr 37997:37999 <> BEq
constr 38020:38022 <> BLe
constr 38043:38046 <> BNot
constr 38063:38066 <> BAnd
R38010:38013 LF.Imp <> aexp ind
binder 38002:38003 <> a1:193
binder 38005:38006 <> a2:194
R38033:38036 LF.Imp <> aexp ind
binder 38025:38026 <> a1:195
binder 38028:38029 <> a2:196
R38053:38056 LF.Imp <> bexp:191 ind
binder 38049:38049 <> b:197
R38077:38080 LF.Imp <> bexp:191 ind
binder 38069:38070 <> b1:198
binder 38072:38073 <> b2:199
R39326:39355 LF.Imp <> AId constr
R39358:39385 LF.Imp <> ANum constr
not 39449:39449 <> ::com_scope:'<{'_x_'}>'
not 39525:39525 <> :com:com_scope:'('_x_')'
not 39591:39591 <> :com:com_scope:x
not 39670:39670 <> :com:com_scope:x_x_'..'_x
R39892:39896 LF.Imp <> APlus constr
not 39880:39880 <> :com::x_'+'_x
R39973:39978 LF.Imp <> AMinus constr
not 39961:39961 <> :com::x_'-'_x
R40055:40059 LF.Imp <> AMult constr
not 40043:40043 <> :com::x_'*'_x
R40137:40140 Coq.Init.Datatypes <> true constr
not 40124:40124 <> :::'true'
R40178:40182 LF.Imp <> BTrue constr
not 40165:40165 <> :com::'true'
R40235:40239 Coq.Init.Datatypes <> false constr
not 40221:40221 <> :::'false'
R40278:40283 LF.Imp <> BFalse constr
not 40264:40264 <> :com::'false'
R40335:40337 LF.Imp <> BLe constr
not 40322:40322 <> :com::x_'<='_x
R40413:40415 LF.Imp <> BEq constr
not 40400:40400 <> :com::x_'='_x
R40491:40494 LF.Imp <> BAnd constr
not 40478:40478 <> :com::x_'&&'_x
R40572:40575 LF.Imp <> BNot constr
not 40559:40559 <> :com::'~'_x
def 40808:40819 <> example_aexp
R40823:40826 LF.Imp <> aexp ind
R40831:40833 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40845:40847 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40835:40837 LF.Imp <> :com::x_'+'_x not
R40838:40838 LF.Imp <> :com:com_scope:'('_x_')' not
R40844:40844 LF.Imp <> :com:com_scope:'('_x_')' not
R40840:40842 LF.Imp <> :com::x_'*'_x not
R40839:40839 LF.Imp <> X def
def 40861:40872 <> example_bexp
R40876:40879 LF.Imp <> bexp ind
R40884:40886 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40904:40906 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40891:40894 LF.Imp <> :com::x_'&&'_x not
R40887:40890 LF.Imp <> :com::'true' not
R40895:40895 LF.Imp <> :com::'~'_x not
R40896:40896 LF.Imp <> :com:com_scope:'('_x_')' not
R40903:40903 LF.Imp <> :com:com_scope:'('_x_')' not
R40898:40901 LF.Imp <> :com::x_'<='_x not
R40897:40897 LF.Imp <> X def
R41208:41219 LF.Imp <> example_bexp def
R41304:41315 LF.Imp <> example_bexp def
def 41648:41652 <> aeval
R41660:41664 LF.Imp <> state def
binder 41655:41656 <> st:200
R41672:41675 LF.Imp <> aexp ind
binder 41668:41668 <> a:201
R41680:41682 Coq.Init.Datatypes <> nat ind
R41695:41695 LF.Imp <> a:201 var
R41706:41709 LF.Imp <> ANum constr
R41722:41724 LF.Imp <> AId constr
R41731:41732 LF.Imp <> st:200 var
R41786:41787 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41795:41796 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41790:41792 LF.Imp <> :com::x_'+'_x not
R41801:41801 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R41813:41817 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R41829:41829 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R41802:41806 LF.Imp <> aeval:202 def
R41808:41809 LF.Imp <> st:200 var
R41818:41822 LF.Imp <> aeval:202 def
R41824:41825 LF.Imp <> st:200 var
R41835:41836 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41844:41845 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41839:41841 LF.Imp <> :com::x_'-'_x not
R41850:41850 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R41862:41866 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R41878:41878 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R41851:41855 LF.Imp <> aeval:202 def
R41857:41858 LF.Imp <> st:200 var
R41867:41871 LF.Imp <> aeval:202 def
R41873:41874 LF.Imp <> st:200 var
R41884:41885 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41893:41894 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41888:41890 LF.Imp <> :com::x_'*'_x not
R41899:41899 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R41911:41915 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R41927:41927 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R41900:41904 LF.Imp <> aeval:202 def
R41906:41907 LF.Imp <> st:200 var
R41916:41920 LF.Imp <> aeval:202 def
R41922:41923 LF.Imp <> st:200 var
def 41946:41950 <> beval
R41958:41962 LF.Imp <> state def
binder 41953:41954 <> st:204
R41970:41973 LF.Imp <> bexp ind
binder 41966:41966 <> b:205
R41978:41981 Coq.Init.Datatypes <> bool ind
R41994:41994 LF.Imp <> b:205 var
R42005:42006 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42011:42012 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42007:42010 LF.Imp <> :com::'true' not
R42022:42025 LF.Imp <> :::'true' not
R42031:42032 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42038:42039 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42033:42037 LF.Imp <> :com::'false' not
R42048:42052 LF.Imp <> :::'false' not
R42058:42059 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42067:42068 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42062:42064 LF.Imp <> :com::x_'='_x not
R42075:42075 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R42087:42092 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R42104:42104 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R42076:42080 LF.Imp <> aeval def
R42082:42083 LF.Imp <> st:204 var
R42093:42097 LF.Imp <> aeval def
R42099:42100 LF.Imp <> st:204 var
R42110:42111 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42120:42121 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42114:42117 LF.Imp <> :com::x_'<='_x not
R42127:42127 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R42139:42145 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R42157:42157 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R42128:42132 LF.Imp <> aeval def
R42134:42135 LF.Imp <> st:204 var
R42146:42150 LF.Imp <> aeval def
R42152:42153 LF.Imp <> st:204 var
R42163:42164 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42169:42170 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42165:42166 LF.Imp <> :com::'~'_x not
R42180:42183 Coq.Init.Datatypes <> negb def
R42186:42190 LF.Imp <> beval:206 def
R42192:42193 LF.Imp <> st:204 var
R42203:42204 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42213:42214 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42207:42210 LF.Imp <> :com::x_'&&'_x not
R42220:42223 Coq.Init.Datatypes <> andb def
R42240:42244 LF.Imp <> beval:206 def
R42246:42247 LF.Imp <> st:204 var
R42226:42230 LF.Imp <> beval:206 def
R42232:42233 LF.Imp <> st:204 var
def 42397:42404 <> empty_st
R42410:42415 LF.Maps <> :::'''_'''_'!->'_x not
R42548:42555 LF.Maps <> t_update def
R42557:42564 LF.Imp <> empty_st def
not 42532:42532 <> :::x_'!->'_x
def 42596:42600 <> aexp1
R42642:42646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42608:42612 LF.Imp <> aeval def
R42624:42626 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42640:42641 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42627:42627 LF.Imp <> :com:com_scope:'('_x_')' not
R42639:42639 LF.Imp <> :com:com_scope:'('_x_')' not
R42629:42631 LF.Imp <> :com::x_'+'_x not
R42632:42632 LF.Imp <> :com:com_scope:'('_x_')' not
R42638:42638 LF.Imp <> :com:com_scope:'('_x_')' not
R42634:42636 LF.Imp <> :com::x_'*'_x not
R42633:42633 LF.Imp <> X def
R42616:42620 LF.Imp <> :::x_'!->'_x not
R42615:42615 LF.Imp <> X def
def 42685:42689 <> bexp1
R42735:42739 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42697:42701 LF.Imp <> beval def
R42713:42715 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42733:42734 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42720:42723 LF.Imp <> :com::x_'&&'_x not
R42716:42719 LF.Imp <> :com::'true' not
R42724:42724 LF.Imp <> :com::'~'_x not
R42725:42725 LF.Imp <> :com:com_scope:'('_x_')' not
R42732:42732 LF.Imp <> :com:com_scope:'('_x_')' not
R42727:42730 LF.Imp <> :com::x_'<='_x not
R42726:42726 LF.Imp <> X def
R42705:42709 LF.Imp <> :::x_'!->'_x not
R42704:42704 LF.Imp <> X def
R42740:42743 LF.Imp <> :::'true' not
ind 43319:43321 <> com
constr 43337:43341 <> CSkip
constr 43347:43350 <> CAss
constr 43380:43383 <> CSeq
constr 43403:43405 <> CIf
constr 43436:43441 <> CWhile
R43357:43362 Coq.Strings.String <> string ind
binder 43353:43353 <> x:210
R43370:43373 LF.Imp <> aexp ind
binder 43366:43366 <> a:211
R43394:43396 LF.Imp <> com:208 ind
binder 43386:43387 <> c1:212
binder 43389:43390 <> c2:213
R43412:43415 LF.Imp <> bexp ind
binder 43408:43408 <> b:214
R43427:43429 LF.Imp <> com:208 ind
binder 43419:43420 <> c1:215
binder 43422:43423 <> c2:216
R43448:43451 LF.Imp <> bexp ind
binder 43444:43444 <> b:217
R43459:43461 LF.Imp <> com:208 ind
binder 43455:43455 <> c:218
R43628:43632 LF.Imp <> CSkip constr
not 43606:43606 <> :com:com_scope:'skip'
R43706:43709 LF.Imp <> CAss constr
not 43683:43683 <> :com:com_scope:x_':='_x
R43865:43868 LF.Imp <> CSeq constr
not 43844:43844 <> :com:com_scope:x_';'_x
R44003:44005 LF.Imp <> CIf constr
not 43957:43957 <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end'
R44170:44175 LF.Imp <> CWhile constr
not 44132:44132 <> :com:com_scope:'while'_x_'do'_x_'end'
def 44379:44389 <> fact_in_coq
R44393:44395 LF.Imp <> com ind
R44402:44404 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44494:44496 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44411:44417 LF.Imp <> :com:com_scope:x_';'_x not
R44406:44409 LF.Imp <> :com:com_scope:x_':='_x not
R44405:44405 LF.Imp <> Z def
R44410:44410 LF.Imp <> X def
R44424:44430 LF.Imp <> :com:com_scope:x_';'_x not
R44419:44422 LF.Imp <> :com:com_scope:x_':='_x not
R44418:44418 LF.Imp <> Y def
R44431:44436 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44445:44455 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44485:44493 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44437:44437 LF.Imp <> :com::'~'_x not
R44438:44438 LF.Imp <> :com:com_scope:'('_x_')' not
R44444:44444 LF.Imp <> :com:com_scope:'('_x_')' not
R44440:44442 LF.Imp <> :com::x_'='_x not
R44439:44439 LF.Imp <> Z def
R44466:44474 LF.Imp <> :com:com_scope:x_';'_x not
R44457:44460 LF.Imp <> :com:com_scope:x_':='_x not
R44456:44456 LF.Imp <> Y def
R44462:44464 LF.Imp <> :com::x_'*'_x not
R44461:44461 LF.Imp <> Y def
R44465:44465 LF.Imp <> Z def
R44476:44479 LF.Imp <> :com:com_scope:x_':='_x not
R44475:44475 LF.Imp <> Z def
R44481:44483 LF.Imp <> :com::x_'-'_x not
R44480:44480 LF.Imp <> Z def
R44506:44516 LF.Imp <> fact_in_coq def
R45320:45330 LF.Imp <> fact_in_coq def
R45623:45633 LF.Imp <> fact_in_coq def
def 47707:47711 <> plus2
R47715:47717 LF.Imp <> com ind
R47724:47726 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47737:47739 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47728:47731 LF.Imp <> :com:com_scope:x_':='_x not
R47727:47727 LF.Imp <> X def
R47733:47735 LF.Imp <> :com::x_'+'_x not
R47732:47732 LF.Imp <> X def
def 47754:47763 <> XtimesYinZ
R47767:47769 LF.Imp <> com ind
R47776:47778 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47789:47791 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47780:47783 LF.Imp <> :com:com_scope:x_':='_x not
R47779:47779 LF.Imp <> Z def
R47785:47787 LF.Imp <> :com::x_'*'_x not
R47784:47784 LF.Imp <> X def
R47788:47788 LF.Imp <> Y def
def 47806:47825 <> subtract_slowly_body
R47829:47831 LF.Imp <> com ind
R47838:47840 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47869:47871 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47851:47858 LF.Imp <> :com:com_scope:x_';'_x not
R47842:47845 LF.Imp <> :com:com_scope:x_':='_x not
R47841:47841 LF.Imp <> Z def
R47847:47849 LF.Imp <> :com::x_'-'_x not
R47846:47846 LF.Imp <> Z def
R47860:47863 LF.Imp <> :com:com_scope:x_':='_x not
R47859:47859 LF.Imp <> X def
R47865:47867 LF.Imp <> :com::x_'-'_x not
R47864:47864 LF.Imp <> X def
def 47976:47990 <> subtract_slowly
R47994:47996 LF.Imp <> com ind
R48003:48005 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48060:48062 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48006:48011 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R48020:48030 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R48051:48059 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R48012:48012 LF.Imp <> :com::'~'_x not
R48013:48013 LF.Imp <> :com:com_scope:'('_x_')' not
R48019:48019 LF.Imp <> :com:com_scope:'('_x_')' not
R48015:48017 LF.Imp <> :com::x_'='_x not
R48014:48014 LF.Imp <> X def
R48031:48050 LF.Imp <> subtract_slowly_body def
def 48077:48100 <> subtract_3_from_5_slowly
R48104:48106 LF.Imp <> com ind
R48113:48115 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48159:48161 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48122:48129 LF.Imp <> :com:com_scope:x_';'_x not
R48117:48120 LF.Imp <> :com:com_scope:x_':='_x not
R48116:48116 LF.Imp <> X def
R48136:48143 LF.Imp <> :com:com_scope:x_';'_x not
R48131:48134 LF.Imp <> :com:com_scope:x_':='_x not
R48130:48130 LF.Imp <> Z def
R48144:48158 LF.Imp <> subtract_slowly def
def 48278:48281 <> loop
R48285:48287 LF.Imp <> com ind
R48294:48296 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48331:48333 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48297:48302 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R48307:48317 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R48322:48330 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R48303:48306 LF.Imp <> :com::'true' not
R48318:48321 LF.Imp <> :com:com_scope:'skip' not
def 48962:48979 <> ceval_fun_no_while
R48987:48991 LF.Imp <> state def
binder 48982:48983 <> st:219
R48999:49001 LF.Imp <> com ind
binder 48995:48995 <> c:220
R49006:49010 LF.Imp <> state def
R49023:49023 LF.Imp <> c:220 var
R49036:49038 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49043:49045 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49039:49042 LF.Imp <> :com:com_scope:'skip' not
R49058:49059 LF.Imp <> st:219 var
R49067:49069 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49076:49078 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49071:49074 LF.Imp <> :com:com_scope:x_':='_x not
R49093:49098 LF.Maps <> :::x_'!->'_x_';'_x not
R49109:49112 LF.Maps <> :::x_'!->'_x_';'_x not
R49113:49114 LF.Imp <> st:219 var
R49099:49103 LF.Imp <> aeval def
R49105:49106 LF.Imp <> st:219 var
R49123:49125 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49133:49135 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49128:49130 LF.Imp <> :com:com_scope:x_';'_x not
R49159:49176 LF.Imp <> ceval_fun_no_while:221 def
R49178:49179 LF.Imp <> st:219 var
binder 49152:49154 <> st':223
R49195:49212 LF.Imp <> ceval_fun_no_while:221 def
R49214:49216 LF.Imp <> st':223 var
R49227:49229 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49254:49255 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49230:49232 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R49234:49239 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R49242:49247 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R49250:49253 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R49272:49276 LF.Imp <> beval def
R49278:49279 LF.Imp <> st:219 var
R49339:49356 LF.Imp <> ceval_fun_no_while:221 def
R49358:49359 LF.Imp <> st:219 var
R49299:49316 LF.Imp <> ceval_fun_no_while:221 def
R49318:49319 LF.Imp <> st:219 var
R49370:49372 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49389:49391 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R49373:49378 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R49380:49383 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R49385:49388 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R49404:49405 LF.Imp <> st:219 var
ind 53703:53707 <> ceval
constr 53748:53753 <> E_Skip
constr 53796:53800 <> E_Ass
constr 53888:53892 <> E_Seq
constr 54012:54019 <> E_IfTrue
constr 54147:54155 <> E_IfFalse
constr 54284:54295 <> E_WhileFalse
constr 54382:54392 <> E_WhileTrue
R53714:53717 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53723:53726 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53732:53735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53727:53731 LF.Imp <> state def
R53718:53722 LF.Imp <> state def
R53711:53713 LF.Imp <> com ind
R54585:54589 LF.Imp <> ceval:225 ind
binder 53764:53765 <> st:226
R53776:53779 LF.Imp <> :::x_'=['_x_']=>'_x not
R53784:53788 LF.Imp <> :::x_'=['_x_']=>'_x not
R53780:53783 LF.Imp <> :com:com_scope:'skip' not
R53774:53775 LF.Imp <> st:226 var
R53789:53790 LF.Imp <> st:226 var
binder 53812:53813 <> st:227
binder 53815:53815 <> a:228
binder 53817:53817 <> n:229
binder 53819:53819 <> x:230
R53842:53851 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53854:53857 LF.Imp <> :::x_'=['_x_']=>'_x not
R53864:53869 LF.Imp <> :::x_'=['_x_']=>'_x not
R53882:53882 LF.Imp <> :::x_'=['_x_']=>'_x not
R53859:53862 LF.Imp <> :com:com_scope:x_':='_x not
R53858:53858 LF.Imp <> x:230 var
R53863:53863 LF.Imp <> a:228 var
R53852:53853 LF.Imp <> st:227 var
R53871:53875 LF.Maps <> :::x_'!->'_x_';'_x not
R53877:53879 LF.Maps <> :::x_'!->'_x_';'_x not
R53880:53881 LF.Imp <> st:227 var
R53870:53870 LF.Imp <> x:230 var
R53876:53876 LF.Imp <> n:229 var
R53838:53840 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53828:53832 LF.Imp <> aeval def
R53837:53837 LF.Imp <> a:228 var
R53834:53835 LF.Imp <> st:227 var
R53841:53841 LF.Imp <> n:229 var
binder 53903:53904 <> c1:231
binder 53906:53907 <> c2:232
binder 53909:53910 <> st:233
binder 53912:53914 <> st':234
binder 53916:53919 <> st'':235
R53945:53955 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53974:53983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53986:53990 LF.Imp <> :::x_'=['_x_']=>'_x not
R53998:54002 LF.Imp <> :::x_'=['_x_']=>'_x not
R53993:53995 LF.Imp <> :com:com_scope:x_';'_x not
R53991:53992 LF.Imp <> c1:231 var
R53996:53997 LF.Imp <> c2:232 var
R53984:53985 LF.Imp <> st:233 var
R54003:54006 LF.Imp <> st'':235 var
R53959:53962 LF.Imp <> :::x_'=['_x_']=>'_x not
R53965:53969 LF.Imp <> :::x_'=['_x_']=>'_x not
R53963:53964 LF.Imp <> c2:232 var
R53956:53958 LF.Imp <> st':234 var
R53970:53973 LF.Imp <> st'':235 var
R53930:53934 LF.Imp <> :::x_'=['_x_']=>'_x not
R53937:53941 LF.Imp <> :::x_'=['_x_']=>'_x not
R53935:53936 LF.Imp <> c1:231 var
R53928:53929 LF.Imp <> st:233 var
R53942:53944 LF.Imp <> st':234 var
binder 54030:54031 <> st:236
binder 54033:54035 <> st':237
binder 54037:54037 <> b:238
binder 54039:54040 <> c1:239
binder 54042:54043 <> c2:240
R54069:54078 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54095:54104 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54107:54110 LF.Imp <> :::x_'=['_x_']=>'_x not
R54135:54138 LF.Imp <> :::x_'=['_x_']=>'_x not
R54111:54113 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54115:54120 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54123:54128 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54131:54134 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54114:54114 LF.Imp <> b:238 var
R54121:54122 LF.Imp <> c1:239 var
R54129:54130 LF.Imp <> c2:240 var
R54105:54106 LF.Imp <> st:236 var
R54139:54141 LF.Imp <> st':237 var
R54081:54084 LF.Imp <> :::x_'=['_x_']=>'_x not
R54087:54091 LF.Imp <> :::x_'=['_x_']=>'_x not
R54085:54086 LF.Imp <> c1:239 var
R54079:54080 LF.Imp <> st:236 var
R54092:54094 LF.Imp <> st':237 var
R54062:54064 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54052:54056 LF.Imp <> beval def
R54061:54061 LF.Imp <> b:238 var
R54058:54059 LF.Imp <> st:236 var
R54065:54068 LF.Imp <> :::'true' not
binder 54166:54167 <> st:241
binder 54169:54171 <> st':242
binder 54173:54173 <> b:243
binder 54175:54176 <> c1:244
binder 54178:54179 <> c2:245
R54206:54215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54232:54241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54244:54247 LF.Imp <> :::x_'=['_x_']=>'_x not
R54272:54275 LF.Imp <> :::x_'=['_x_']=>'_x not
R54248:54250 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54252:54257 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54260:54265 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54268:54271 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54251:54251 LF.Imp <> b:243 var
R54258:54259 LF.Imp <> c1:244 var
R54266:54267 LF.Imp <> c2:245 var
R54242:54243 LF.Imp <> st:241 var
R54276:54278 LF.Imp <> st':242 var
R54218:54221 LF.Imp <> :::x_'=['_x_']=>'_x not
R54224:54228 LF.Imp <> :::x_'=['_x_']=>'_x not
R54222:54223 LF.Imp <> c2:245 var
R54216:54217 LF.Imp <> st:241 var
R54229:54231 LF.Imp <> st':242 var
R54198:54200 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54188:54192 LF.Imp <> beval def
R54197:54197 LF.Imp <> b:243 var
R54194:54195 LF.Imp <> st:241 var
R54201:54205 LF.Imp <> :::'false' not
binder 54306:54306 <> b:246
binder 54308:54309 <> st:247
binder 54311:54311 <> c:248
R54338:54347 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54350:54353 LF.Imp <> :::x_'=['_x_']=>'_x not
R54370:54374 LF.Imp <> :::x_'=['_x_']=>'_x not
R54354:54359 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R54361:54364 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R54366:54369 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R54360:54360 LF.Imp <> b:246 var
R54365:54365 LF.Imp <> c:248 var
R54348:54349 LF.Imp <> st:247 var
R54375:54376 LF.Imp <> st:247 var
R54330:54332 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54320:54324 LF.Imp <> beval def
R54329:54329 LF.Imp <> b:246 var
R54326:54327 LF.Imp <> st:247 var
R54333:54337 LF.Imp <> :::'false' not
binder 54403:54404 <> st:249
binder 54406:54408 <> st':250
binder 54410:54413 <> st'':251
binder 54415:54415 <> b:252
binder 54417:54417 <> c:253
R54443:54452 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54469:54478 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54511:54520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54523:54527 LF.Imp <> :::x_'=['_x_']=>'_x not
R54544:54548 LF.Imp <> :::x_'=['_x_']=>'_x not
R54528:54533 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R54535:54538 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R54540:54543 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R54534:54534 LF.Imp <> b:252 var
R54539:54539 LF.Imp <> c:253 var
R54521:54522 LF.Imp <> st:249 var
R54549:54552 LF.Imp <> st'':251 var
R54482:54485 LF.Imp <> :::x_'=['_x_']=>'_x not
R54502:54506 LF.Imp <> :::x_'=['_x_']=>'_x not
R54486:54491 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R54493:54496 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R54498:54501 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R54492:54492 LF.Imp <> b:252 var
R54497:54497 LF.Imp <> c:253 var
R54479:54481 LF.Imp <> st':250 var
R54507:54510 LF.Imp <> st'':251 var
R54455:54459 LF.Imp <> :::x_'=['_x_']=>'_x not
R54461:54465 LF.Imp <> :::x_'=['_x_']=>'_x not
R54460:54460 LF.Imp <> c:253 var
R54453:54454 LF.Imp <> st:249 var
R54466:54468 LF.Imp <> st':250 var
R54436:54438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54426:54430 LF.Imp <> beval def
R54435:54435 LF.Imp <> b:252 var
R54432:54433 LF.Imp <> st:249 var
R54439:54442 LF.Imp <> :::'true' not
R54585:54589 LF.Imp <> ceval ind
not 54563:54563 <> :::x_'=['_x_']=>'_x
def 54858:54871 <> ceval_example1
R54884:54892 LF.Imp <> :::x_'=['_x_']=>'_x not
R54964:54971 LF.Imp <> :::x_'=['_x_']=>'_x not
R54989:54989 LF.Imp <> :::x_'=['_x_']=>'_x not
R54899:54905 LF.Imp <> :com:com_scope:x_';'_x not
R54894:54897 LF.Imp <> :com:com_scope:x_':='_x not
R54893:54893 LF.Imp <> X def
R54906:54908 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54917:54929 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54936:54948 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54955:54963 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54909:54909 LF.Imp <> :com:com_scope:'('_x_')' not
R54916:54916 LF.Imp <> :com:com_scope:'('_x_')' not
R54911:54914 LF.Imp <> :com::x_'<='_x not
R54910:54910 LF.Imp <> X def
R54931:54934 LF.Imp <> :com:com_scope:x_':='_x not
R54930:54930 LF.Imp <> Y def
R54950:54953 LF.Imp <> :com:com_scope:x_':='_x not
R54949:54949 LF.Imp <> Z def
R54876:54883 LF.Imp <> empty_st def
R54973:54977 LF.Maps <> :::x_'!->'_x_';'_x not
R54979:54981 LF.Maps <> :::x_'!->'_x_';'_x not
R54983:54987 LF.Imp <> :::x_'!->'_x not
R54982:54982 LF.Imp <> X def
R54972:54972 LF.Imp <> Z def
R55066:55070 LF.Imp <> :::x_'!->'_x not
R55065:55065 LF.Imp <> X def
R55053:55057 LF.Imp <> E_Seq constr
R55066:55070 LF.Imp <> :::x_'!->'_x not
R55065:55065 LF.Imp <> X def
R55053:55057 LF.Imp <> E_Seq constr
R55114:55118 LF.Imp <> E_Ass constr
R55114:55118 LF.Imp <> E_Ass constr
R55165:55173 LF.Imp <> E_IfFalse constr
R55165:55173 LF.Imp <> E_IfFalse constr
R55203:55207 LF.Imp <> E_Ass constr
R55203:55207 LF.Imp <> E_Ass constr
def 55295:55308 <> ceval_example2
R55321:55328 LF.Imp <> :::x_'=['_x_']=>'_x not
R55359:55366 LF.Imp <> :::x_'=['_x_']=>'_x not
R55394:55394 LF.Imp <> :::x_'=['_x_']=>'_x not
R55335:55340 LF.Imp <> :com:com_scope:x_';'_x not
R55330:55333 LF.Imp <> :com:com_scope:x_':='_x not
R55329:55329 LF.Imp <> X def
R55347:55352 LF.Imp <> :com:com_scope:x_';'_x not
R55342:55345 LF.Imp <> :com:com_scope:x_':='_x not
R55341:55341 LF.Imp <> Y def
R55354:55357 LF.Imp <> :com:com_scope:x_':='_x not
R55353:55353 LF.Imp <> Z def
R55313:55320 LF.Imp <> empty_st def
R55368:55372 LF.Maps <> :::x_'!->'_x_';'_x not
R55374:55376 LF.Maps <> :::x_'!->'_x_';'_x not
R55378:55382 LF.Maps <> :::x_'!->'_x_';'_x not
R55384:55386 LF.Maps <> :::x_'!->'_x_';'_x not
R55388:55392 LF.Imp <> :::x_'!->'_x not
R55387:55387 LF.Imp <> X def
R55377:55377 LF.Imp <> Y def
R55367:55367 LF.Imp <> Z def
R55425:55429 LF.Imp <> :::x_'!->'_x not
R55424:55424 LF.Imp <> X def
R55412:55416 LF.Imp <> E_Seq constr
R55425:55429 LF.Imp <> :::x_'!->'_x not
R55424:55424 LF.Imp <> X def
R55412:55416 LF.Imp <> E_Seq constr
R55440:55444 LF.Imp <> E_Ass constr
R55440:55444 LF.Imp <> E_Ass constr
R55483:55487 LF.Maps <> :::x_'!->'_x_';'_x not
R55489:55491 LF.Maps <> :::x_'!->'_x_';'_x not
R55493:55497 LF.Imp <> :::x_'!->'_x not
R55492:55492 LF.Imp <> X def
R55482:55482 LF.Imp <> Y def
R55470:55474 LF.Imp <> E_Seq constr
R55483:55487 LF.Maps <> :::x_'!->'_x_';'_x not
R55489:55491 LF.Maps <> :::x_'!->'_x_';'_x not
R55493:55497 LF.Imp <> :::x_'!->'_x not
R55492:55492 LF.Imp <> X def
R55482:55482 LF.Imp <> Y def
R55470:55474 LF.Imp <> E_Seq constr
R55508:55512 LF.Imp <> E_Ass constr
R55508:55512 LF.Imp <> E_Ass constr
R55536:55540 LF.Imp <> E_Ass constr
R55536:55540 LF.Imp <> E_Ass constr
R55602:55615 LF.Imp <> ceval_example2 ex
def 56027:56034 <> pup_to_n
R56038:56040 LF.Imp <> com ind
R56047:56053 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R56121:56125 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R56060:56067 LF.Imp <> :com:com_scope:x_';'_x not
R56055:56058 LF.Imp <> :com:com_scope:x_':='_x not
R56054:56054 LF.Imp <> Y def
R56068:56073 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56079:56086 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56113:56120 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56075:56077 LF.Imp <> :com::x_'<='_x not
R56078:56078 LF.Imp <> X def
R56097:56102 LF.Imp <> :com:com_scope:x_';'_x not
R56088:56091 LF.Imp <> :com:com_scope:x_':='_x not
R56087:56087 LF.Imp <> Y def
R56093:56095 LF.Imp <> :com::x_'+'_x not
R56092:56092 LF.Imp <> Y def
R56096:56096 LF.Imp <> X def
R56104:56107 LF.Imp <> :com:com_scope:x_':='_x not
R56103:56103 LF.Imp <> X def
R56109:56111 LF.Imp <> :com::x_'-'_x not
R56108:56108 LF.Imp <> X def
prf 56137:56150 <> pup_to_2_ceval
R56156:56156 LF.Imp <> :::x_'=['_x_']=>'_x not
R56164:56172 LF.Imp <> :::x_'=['_x_']=>'_x not
R56181:56188 LF.Imp <> :::x_'=['_x_']=>'_x not
R56246:56246 LF.Imp <> :::x_'=['_x_']=>'_x not
R56173:56180 LF.Imp <> pup_to_n def
R56158:56162 LF.Imp <> :::x_'!->'_x not
R56157:56157 LF.Imp <> X def
R56190:56194 LF.Maps <> :::x_'!->'_x_';'_x not
R56196:56198 LF.Maps <> :::x_'!->'_x_';'_x not
R56200:56204 LF.Maps <> :::x_'!->'_x_';'_x not
R56206:56208 LF.Maps <> :::x_'!->'_x_';'_x not
R56210:56214 LF.Maps <> :::x_'!->'_x_';'_x not
R56216:56218 LF.Maps <> :::x_'!->'_x_';'_x not
R56220:56224 LF.Maps <> :::x_'!->'_x_';'_x not
R56226:56228 LF.Maps <> :::x_'!->'_x_';'_x not
R56230:56234 LF.Maps <> :::x_'!->'_x_';'_x not
R56236:56238 LF.Maps <> :::x_'!->'_x_';'_x not
R56240:56244 LF.Imp <> :::x_'!->'_x not
R56239:56239 LF.Imp <> X def
R56229:56229 LF.Imp <> Y def
R56219:56219 LF.Imp <> Y def
R56209:56209 LF.Imp <> X def
R56199:56199 LF.Imp <> Y def
R56189:56189 LF.Imp <> X def
R56265:56272 LF.Imp <> pup_to_n def
R56297:56301 LF.Maps <> :::x_'!->'_x_';'_x not
R56303:56305 LF.Maps <> :::x_'!->'_x_';'_x not
R56307:56311 LF.Imp <> :::x_'!->'_x not
R56306:56306 LF.Imp <> X def
R56296:56296 LF.Imp <> Y def
R56283:56287 LF.Imp <> E_Seq constr
R56297:56301 LF.Maps <> :::x_'!->'_x_';'_x not
R56303:56305 LF.Maps <> :::x_'!->'_x_';'_x not
R56307:56311 LF.Imp <> :::x_'!->'_x not
R56306:56306 LF.Imp <> X def
R56296:56296 LF.Imp <> Y def
R56283:56287 LF.Imp <> E_Seq constr
R56324:56328 LF.Imp <> E_Ass constr
R56324:56328 LF.Imp <> E_Ass constr
R56372:56376 LF.Maps <> :::x_'!->'_x_';'_x not
R56378:56379 LF.Maps <> :::x_'!->'_x_';'_x not
R56381:56385 LF.Maps <> :::x_'!->'_x_';'_x not
R56387:56388 LF.Maps <> :::x_'!->'_x_';'_x not
R56390:56393 LF.Maps <> :::x_'!->'_x_';'_x not
R56395:56397 LF.Maps <> :::x_'!->'_x_';'_x not
R56399:56403 LF.Imp <> :::x_'!->'_x not
R56398:56398 LF.Imp <> X def
R56389:56389 LF.Imp <> Y def
R56380:56380 LF.Imp <> Y def
R56371:56371 LF.Imp <> X def
R56352:56362 LF.Imp <> E_WhileTrue constr
R56372:56376 LF.Maps <> :::x_'!->'_x_';'_x not
R56378:56379 LF.Maps <> :::x_'!->'_x_';'_x not
R56381:56385 LF.Maps <> :::x_'!->'_x_';'_x not
R56387:56388 LF.Maps <> :::x_'!->'_x_';'_x not
R56390:56393 LF.Maps <> :::x_'!->'_x_';'_x not
R56395:56397 LF.Maps <> :::x_'!->'_x_';'_x not
R56399:56403 LF.Imp <> :::x_'!->'_x not
R56398:56398 LF.Imp <> X def
R56389:56389 LF.Imp <> Y def
R56380:56380 LF.Imp <> Y def
R56371:56371 LF.Imp <> X def
R56352:56362 LF.Imp <> E_WhileTrue constr
R56449:56451 LF.Maps <> :::x_'!->'_x_';'_x not
R56453:56454 LF.Maps <> :::x_'!->'_x_';'_x not
R56456:56460 LF.Maps <> :::x_'!->'_x_';'_x not
R56462:56463 LF.Maps <> :::x_'!->'_x_';'_x not
R56465:56469 LF.Imp <> :::x_'!->'_x not
R56464:56464 LF.Imp <> X def
R56455:56455 LF.Imp <> Y def
R56448:56448 LF.Imp <> Y def
R56435:56439 LF.Imp <> E_Seq constr
R56449:56451 LF.Maps <> :::x_'!->'_x_';'_x not
R56453:56454 LF.Maps <> :::x_'!->'_x_';'_x not
R56456:56460 LF.Maps <> :::x_'!->'_x_';'_x not
R56462:56463 LF.Maps <> :::x_'!->'_x_';'_x not
R56465:56469 LF.Imp <> :::x_'!->'_x not
R56464:56464 LF.Imp <> X def
R56455:56455 LF.Imp <> Y def
R56448:56448 LF.Imp <> Y def
R56435:56439 LF.Imp <> E_Seq constr
R56486:56490 LF.Imp <> E_Ass constr
R56486:56490 LF.Imp <> E_Ass constr
R56525:56529 LF.Imp <> E_Ass constr
R56525:56529 LF.Imp <> E_Ass constr
R56574:56578 LF.Maps <> :::x_'!->'_x_';'_x not
R56580:56581 LF.Maps <> :::x_'!->'_x_';'_x not
R56583:56587 LF.Maps <> :::x_'!->'_x_';'_x not
R56589:56590 LF.Maps <> :::x_'!->'_x_';'_x not
R56592:56596 LF.Maps <> :::x_'!->'_x_';'_x not
R56598:56599 LF.Maps <> :::x_'!->'_x_';'_x not
R56601:56605 LF.Maps <> :::x_'!->'_x_';'_x not
R56607:56608 LF.Maps <> :::x_'!->'_x_';'_x not
R56610:56614 LF.Maps <> :::x_'!->'_x_';'_x not
R56616:56617 LF.Maps <> :::x_'!->'_x_';'_x not
R56619:56623 LF.Imp <> :::x_'!->'_x not
R56618:56618 LF.Imp <> X def
R56609:56609 LF.Imp <> Y def
R56600:56600 LF.Imp <> Y def
R56591:56591 LF.Imp <> X def
R56582:56582 LF.Imp <> Y def
R56573:56573 LF.Imp <> X def
R56555:56565 LF.Imp <> E_WhileTrue constr
R56574:56578 LF.Maps <> :::x_'!->'_x_';'_x not
R56580:56581 LF.Maps <> :::x_'!->'_x_';'_x not
R56583:56587 LF.Maps <> :::x_'!->'_x_';'_x not
R56589:56590 LF.Maps <> :::x_'!->'_x_';'_x not
R56592:56596 LF.Maps <> :::x_'!->'_x_';'_x not
R56598:56599 LF.Maps <> :::x_'!->'_x_';'_x not
R56601:56605 LF.Maps <> :::x_'!->'_x_';'_x not
R56607:56608 LF.Maps <> :::x_'!->'_x_';'_x not
R56610:56614 LF.Maps <> :::x_'!->'_x_';'_x not
R56616:56617 LF.Maps <> :::x_'!->'_x_';'_x not
R56619:56623 LF.Imp <> :::x_'!->'_x not
R56618:56618 LF.Imp <> X def
R56609:56609 LF.Imp <> Y def
R56600:56600 LF.Imp <> Y def
R56591:56591 LF.Imp <> X def
R56582:56582 LF.Imp <> Y def
R56573:56573 LF.Imp <> X def
R56555:56565 LF.Imp <> E_WhileTrue constr
R56672:56676 LF.Maps <> :::x_'!->'_x_';'_x not
R56678:56679 LF.Maps <> :::x_'!->'_x_';'_x not
R56681:56685 LF.Maps <> :::x_'!->'_x_';'_x not
R56687:56688 LF.Maps <> :::x_'!->'_x_';'_x not
R56690:56694 LF.Maps <> :::x_'!->'_x_';'_x not
R56696:56697 LF.Maps <> :::x_'!->'_x_';'_x not
R56699:56703 LF.Maps <> :::x_'!->'_x_';'_x not
R56705:56706 LF.Maps <> :::x_'!->'_x_';'_x not
R56708:56712 LF.Imp <> :::x_'!->'_x not
R56707:56707 LF.Imp <> X def
R56698:56698 LF.Imp <> Y def
R56689:56689 LF.Imp <> Y def
R56680:56680 LF.Imp <> X def
R56671:56671 LF.Imp <> Y def
R56659:56663 LF.Imp <> E_Seq constr
R56723:56727 LF.Imp <> E_Ass constr
R56672:56676 LF.Maps <> :::x_'!->'_x_';'_x not
R56678:56679 LF.Maps <> :::x_'!->'_x_';'_x not
R56681:56685 LF.Maps <> :::x_'!->'_x_';'_x not
R56687:56688 LF.Maps <> :::x_'!->'_x_';'_x not
R56690:56694 LF.Maps <> :::x_'!->'_x_';'_x not
R56696:56697 LF.Maps <> :::x_'!->'_x_';'_x not
R56699:56703 LF.Maps <> :::x_'!->'_x_';'_x not
R56705:56706 LF.Maps <> :::x_'!->'_x_';'_x not
R56708:56712 LF.Imp <> :::x_'!->'_x not
R56707:56707 LF.Imp <> X def
R56698:56698 LF.Imp <> Y def
R56689:56689 LF.Imp <> Y def
R56680:56680 LF.Imp <> X def
R56671:56671 LF.Imp <> Y def
R56659:56663 LF.Imp <> E_Seq constr
R56723:56727 LF.Imp <> E_Ass constr
R56723:56727 LF.Imp <> E_Ass constr
R56761:56772 LF.Imp <> E_WhileFalse constr
R56761:56772 LF.Imp <> E_WhileFalse constr
prf 57475:57493 <> ceval_deterministic
binder 57503:57503 <> c:254
binder 57505:57506 <> st:255
binder 57508:57510 <> st1:256
binder 57512:57514 <> st2:257
R57537:57546 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57562:57570 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57574:57576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57571:57573 LF.Imp <> st1:256 var
R57577:57579 LF.Imp <> st2:257 var
R57549:57552 LF.Imp <> :::x_'=['_x_']=>'_x not
R57554:57558 LF.Imp <> :::x_'=['_x_']=>'_x not
R57553:57553 LF.Imp <> c:254 var
R57547:57548 LF.Imp <> st:255 var
R57559:57561 LF.Imp <> st2:257 var
R57524:57527 LF.Imp <> :::x_'=['_x_']=>'_x not
R57529:57533 LF.Imp <> :::x_'=['_x_']=>'_x not
R57528:57528 LF.Imp <> c:254 var
R57522:57523 LF.Imp <> st:255 var
R57534:57536 LF.Imp <> st1:256 var
R58914:58918 LF.Imp <> plus2 def
prf 58930:58939 <> plus2_spec
binder 58950:58951 <> st:258
binder 58953:58953 <> n:259
binder 58955:58957 <> st':260
R58970:58975 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58995:59000 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59006:59008 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59001:59003 LF.Imp <> st':260 var
R59005:59005 LF.Imp <> X def
R59010:59012 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R59009:59009 LF.Imp <> n:259 var
R58978:58981 LF.Imp <> :::x_'=['_x_']=>'_x not
R58987:58991 LF.Imp <> :::x_'=['_x_']=>'_x not
R58982:58986 LF.Imp <> plus2 def
R58976:58977 LF.Imp <> st:258 var
R58992:58994 LF.Imp <> st':260 var
R58966:58968 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58962:58963 LF.Imp <> st:258 var
R58965:58965 LF.Imp <> X def
R58969:58969 LF.Imp <> n:259 var
R59339:59349 LF.Maps <> t_update_eq thm
R59339:59349 LF.Maps <> t_update_eq thm
R59538:59547 LF.Imp <> XtimesYinZ def
R59556:59566 LF.Maps <> t_update_eq thm
prf 59579:59593 <> XtimesYinZ_spec
binder 59604:59605 <> st:261
binder 59607:59608 <> n1:262
binder 59610:59611 <> n2:263
binder 59613:59615 <> st':264
R59629:59634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59644:59649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59674:59679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59685:59687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59680:59682 LF.Imp <> st':264 var
R59684:59684 LF.Imp <> Z def
R59690:59692 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R59688:59689 LF.Imp <> n1:262 var
R59693:59694 LF.Imp <> n2:263 var
R59652:59655 LF.Imp <> :::x_'=['_x_']=>'_x not
R59666:59670 LF.Imp <> :::x_'=['_x_']=>'_x not
R59656:59665 LF.Imp <> XtimesYinZ def
R59650:59651 LF.Imp <> st:261 var
R59671:59673 LF.Imp <> st':264 var
R59639:59641 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59635:59636 LF.Imp <> st:261 var
R59638:59638 LF.Imp <> Y def
R59642:59643 LF.Imp <> n2:263 var
R59624:59626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59620:59621 LF.Imp <> st:261 var
R59623:59623 LF.Imp <> X def
R59627:59628 LF.Imp <> n1:262 var
R59750:59760 LF.Maps <> t_update_eq thm
R59750:59760 LF.Maps <> t_update_eq thm
def 59839:59870 <> manual_grade_for_XtimesYinZ_spec
R59874:59879 Coq.Init.Datatypes <> option ind
R59885:59885 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59882:59884 Coq.Init.Datatypes <> nat ind
R59886:59891 Coq.Strings.String <> string ind
R59897:59900 Coq.Init.Datatypes <> None constr
prf 60001:60016 <> loop_never_stops
binder 60027:60028 <> st:265
binder 60030:60032 <> st':266
R60037:60038 Coq.Init.Logic <> ::type_scope:'~'_x not
R60057:60057 Coq.Init.Logic <> ::type_scope:'~'_x not
R60041:60044 LF.Imp <> :::x_'=['_x_']=>'_x not
R60049:60053 LF.Imp <> :::x_'=['_x_']=>'_x not
R60045:60048 LF.Imp <> loop def
R60039:60040 LF.Imp <> st:265 var
R60054:60056 LF.Imp <> st':266 var
R60098:60101 LF.Imp <> loop def
R60125:60127 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60150:60152 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60128:60133 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R60138:60141 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R60146:60149 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R60134:60137 LF.Imp <> :com::'true' not
R60142:60145 LF.Imp <> :com:com_scope:'skip' not
R60125:60127 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60150:60152 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60128:60133 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R60138:60141 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R60146:60149 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R60134:60137 LF.Imp <> :com::'true' not
R60142:60145 LF.Imp <> :com:com_scope:'skip' not
def 60706:60714 <> no_whiles
R60721:60723 LF.Imp <> com ind
binder 60717:60717 <> c:267
R60728:60731 Coq.Init.Datatypes <> bool ind
R60744:60744 LF.Imp <> c:267 var
R60755:60757 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60762:60764 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60758:60761 LF.Imp <> :com:com_scope:'skip' not
R60775:60778 LF.Imp <> :::'true' not
R60784:60786 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60793:60795 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60788:60791 LF.Imp <> :com:com_scope:x_':='_x not
R60806:60809 LF.Imp <> :::'true' not
R60815:60817 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60825:60827 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60820:60822 LF.Imp <> :com:com_scope:x_';'_x not
R60838:60841 Coq.Init.Datatypes <> andb def
R60859:60867 LF.Imp <> no_whiles:268 def
R60844:60852 LF.Imp <> no_whiles:268 def
R60877:60879 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60904:60906 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60880:60882 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R60884:60889 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R60892:60897 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R60900:60903 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R60917:60920 Coq.Init.Datatypes <> andb def
R60938:60946 LF.Imp <> no_whiles:268 def
R60923:60931 LF.Imp <> no_whiles:268 def
R60956:60958 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60975:60977 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R60959:60964 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R60966:60969 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R60971:60974 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R60989:60993 LF.Imp <> :::'false' not
ind 61289:61298 <> no_whilesR
constr 61318:61324 <> NW_Skip
constr 61354:61359 <> NW_Ass
constr 61394:61399 <> NW_Seq
constr 61472:61476 <> NW_If
constr 61562:61569 <> NW_While
R61304:61307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61301:61303 LF.Imp <> com ind
R61328:61337 LF.Imp <> no_whilesR:270 ind
R61339:61341 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61346:61348 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61342:61345 LF.Imp <> :com:com_scope:'skip' not
binder 61361:61361 <> X:272
binder 61363:61363 <> Y:273
R61366:61375 LF.Imp <> no_whilesR:270 ind
R61377:61379 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61386:61388 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61381:61384 LF.Imp <> :com:com_scope:x_':='_x not
R61380:61380 LF.Imp <> X:272 var
R61385:61385 LF.Imp <> Y:273 var
binder 61401:61401 <> X:274
binder 61403:61403 <> Y:275
R61410:61419 LF.Imp <> no_whilesR:270 ind
R61421:61421 LF.Imp <> X:274 var
binder 61406:61407 <> H1:276
R61428:61437 LF.Imp <> no_whilesR:270 ind
R61439:61439 LF.Imp <> Y:275 var
binder 61425:61425 <> H:277
R61444:61453 LF.Imp <> no_whilesR:270 ind
R61455:61457 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61463:61465 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61459:61461 LF.Imp <> :com:com_scope:x_';'_x not
R61458:61458 LF.Imp <> X:274 var
R61462:61462 LF.Imp <> Y:275 var
binder 61478:61478 <> X:278
binder 61480:61480 <> Y:279
binder 61482:61482 <> C:280
R61498:61501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61514:61517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61518:61527 LF.Imp <> no_whilesR:270 ind
R61529:61531 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61554:61556 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61532:61534 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R61536:61541 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R61543:61548 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R61550:61553 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R61535:61535 LF.Imp <> C:280 var
R61542:61542 LF.Imp <> X:278 var
R61549:61549 LF.Imp <> Y:279 var
R61502:61511 LF.Imp <> no_whilesR:270 ind
R61513:61513 LF.Imp <> Y:279 var
R61486:61495 LF.Imp <> no_whilesR:270 ind
R61497:61497 LF.Imp <> X:278 var
binder 61571:61571 <> a:281
binder 61573:61573 <> b:282
R61585:61588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61589:61598 LF.Imp <> no_whilesR:270 ind
R61600:61602 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61619:61621 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R61603:61608 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R61610:61613 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R61615:61618 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R61609:61609 LF.Imp <> a:281 var
R61614:61614 LF.Imp <> b:282 var
R61581:61583 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61577:61579 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R61647:61650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61640:61642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61635:61638 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R61643:61646 LF.Imp <> :::'true' not
prf 61664:61676 <> no_whiles_eqv
binder 61689:61689 <> c:283
R61710:61714 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R61703:61705 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61692:61700 LF.Imp <> no_whiles def
R61702:61702 LF.Imp <> c:283 var
R61706:61709 LF.Imp <> :::'true' not
R61715:61724 LF.Imp <> no_whilesR ind
R61726:61726 LF.Imp <> c:283 var
R61791:61797 LF.Imp <> NW_Skip constr
R61791:61797 LF.Imp <> NW_Skip constr
R61812:61817 LF.Imp <> NW_Ass constr
R61812:61817 LF.Imp <> NW_Ass constr
R61832:61837 LF.Imp <> NW_Seq constr
R61860:61868 Coq.Init.Datatypes <> andb_prop thm
R61832:61837 LF.Imp <> NW_Seq constr
R61860:61868 Coq.Init.Datatypes <> andb_prop thm
R61860:61868 Coq.Init.Datatypes <> andb_prop thm
R61952:61956 LF.Imp <> NW_If constr
R61978:61986 Coq.Init.Datatypes <> andb_prop thm
R61952:61956 LF.Imp <> NW_If constr
R61978:61986 Coq.Init.Datatypes <> andb_prop thm
R61978:61986 Coq.Init.Datatypes <> andb_prop thm
R62067:62074 LF.Imp <> NW_While constr
R62067:62074 LF.Imp <> NW_While constr
prf 62649:62669 <> no_whiles_terminating
binder 62681:62681 <> c:284
binder 62683:62684 <> st:285
R62699:62703 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62732:62732 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62704:62710 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R62714:62716 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 62711:62713 <> st':286
R62719:62722 LF.Imp <> :::x_'=['_x_']=>'_x not
R62724:62728 LF.Imp <> :::x_'=['_x_']=>'_x not
R62723:62723 LF.Imp <> c:284 var
R62717:62718 LF.Imp <> st:285 var
R62729:62731 LF.Imp <> st':286 var
R62687:62696 LF.Imp <> no_whilesR ind
R62698:62698 LF.Imp <> c:284 var
R62820:62825 LF.Imp <> E_Skip constr
R62820:62825 LF.Imp <> E_Skip constr
R62849:62854 LF.Maps <> :::x_'!->'_x_';'_x not
R62865:62868 LF.Maps <> :::x_'!->'_x_';'_x not
R62855:62859 LF.Imp <> aeval def
R62849:62854 LF.Maps <> :::x_'!->'_x_';'_x not
R62865:62868 LF.Maps <> :::x_'!->'_x_';'_x not
R62855:62859 LF.Imp <> aeval def
R62880:62884 LF.Imp <> E_Ass constr
R62880:62884 LF.Imp <> E_Ass constr
R63057:63061 LF.Imp <> E_Seq constr
R63057:63061 LF.Imp <> E_Seq constr
R63244:63248 LF.Imp <> beval def
R63244:63248 LF.Imp <> beval def
R63271:63275 LF.Imp <> beval def
R63271:63275 LF.Imp <> beval def
R63317:63324 LF.Imp <> E_IfTrue constr
R63317:63324 LF.Imp <> E_IfTrue constr
R63393:63401 LF.Imp <> E_IfFalse constr
R63393:63401 LF.Imp <> E_IfFalse constr
def 63541:63578 <> manual_grade_for_no_whiles_terminating
R63582:63587 Coq.Init.Datatypes <> option ind
R63593:63593 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R63590:63592 Coq.Init.Datatypes <> nat ind
R63594:63599 Coq.Strings.String <> string ind
R63605:63608 Coq.Init.Datatypes <> None constr
ind 65149:65154 <> sinstr
constr 65168:65172 <> SPush
constr 65186:65190 <> SLoad
constr 65207:65211 <> SPlus
constr 65215:65220 <> SMinus
constr 65224:65228 <> SMult
R65179:65181 Coq.Init.Datatypes <> nat ind
binder 65175:65175 <> n:289
R65197:65202 Coq.Strings.String <> string ind
binder 65193:65193 <> x:290
def 66002:66010 <> s_execute
R66018:66022 LF.Imp <> state def
binder 66013:66014 <> st:291
R66034:66037 Coq.Init.Datatypes <> list ind
R66039:66041 Coq.Init.Datatypes <> nat ind
binder 66026:66030 <> stack:292
R66071:66074 Coq.Init.Datatypes <> list ind
R66076:66081 LF.Imp <> sinstr ind
binder 66064:66067 <> prog:293
R66103:66106 Coq.Init.Datatypes <> list ind
R66108:66110 Coq.Init.Datatypes <> nat ind
R66186:66194 LF.Imp <> s_execute prfax
def 66206:66215 <> s_execute1
R66288:66293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66224:66232 LF.Imp <> s_execute prfax
R66253:66253 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66261:66262 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66270:66271 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66279:66280 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66287:66287 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66254:66258 LF.Imp <> SPush constr
R66263:66267 LF.Imp <> SPush constr
R66272:66276 LF.Imp <> SPush constr
R66281:66286 LF.Imp <> SMinus constr
R66243:66244 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R66234:66241 LF.Imp <> empty_st def
R66294:66294 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66296:66297 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66299:66299 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 66340:66349 <> s_execute2
R66423:66428 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66358:66366 LF.Imp <> s_execute prfax
R66391:66391 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66399:66400 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66408:66409 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66415:66416 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66422:66422 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66392:66396 LF.Imp <> SPush constr
R66401:66405 LF.Imp <> SLoad constr
R66407:66407 LF.Imp <> X def
R66410:66414 LF.Imp <> SMult constr
R66417:66421 LF.Imp <> SPlus constr
R66378:66378 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66380:66380 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66382:66382 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66370:66374 LF.Imp <> :::x_'!->'_x not
R66369:66369 LF.Imp <> X def
R66429:66429 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66432:66433 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66435:66435 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 66676:66684 <> s_compile
R66691:66694 LF.Imp <> aexp ind
binder 66687:66687 <> e:295
R66699:66702 Coq.Init.Datatypes <> list ind
R66704:66709 LF.Imp <> sinstr ind
def 66876:66885 <> s_compile1
R66918:66922 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66891:66899 LF.Imp <> s_compile prfax
R66901:66903 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R66915:66917 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R66905:66907 LF.Imp <> :com::x_'-'_x not
R66904:66904 LF.Imp <> X def
R66908:66908 LF.Imp <> :com:com_scope:'('_x_')' not
R66914:66914 LF.Imp <> :com:com_scope:'('_x_')' not
R66910:66912 LF.Imp <> :com::x_'*'_x not
R66913:66913 LF.Imp <> Y def
R66923:66923 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66931:66932 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66940:66941 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66949:66950 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66956:66957 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66964:66964 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66924:66928 LF.Imp <> SLoad constr
R66930:66930 LF.Imp <> X def
R66933:66937 LF.Imp <> SPush constr
R66942:66946 LF.Imp <> SLoad constr
R66948:66948 LF.Imp <> Y def
R66951:66955 LF.Imp <> SMult constr
R66958:66963 LF.Imp <> SMinus constr
prf 67290:67300 <> execute_app
binder 67311:67312 <> st:297
binder 67314:67315 <> p1:298
binder 67317:67318 <> p2:299
binder 67320:67324 <> stack:300
R67360:67362 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67331:67339 LF.Imp <> s_execute prfax
R67353:67356 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R67351:67352 LF.Imp <> p1:298 var
R67357:67358 LF.Imp <> p2:299 var
R67344:67348 LF.Imp <> stack:300 var
R67341:67342 LF.Imp <> st:297 var
R67363:67371 LF.Imp <> s_execute prfax
R67400:67401 LF.Imp <> p2:299 var
R67377:67385 LF.Imp <> s_execute prfax
R67396:67397 LF.Imp <> p1:298 var
R67390:67394 LF.Imp <> stack:300 var
R67387:67388 LF.Imp <> st:297 var
R67373:67374 LF.Imp <> st:297 var
prf 67785:67805 <> s_compile_correct_aux
binder 67816:67817 <> st:301
binder 67819:67819 <> e:302
binder 67821:67825 <> stack:303
R67862:67864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67830:67838 LF.Imp <> s_execute prfax
R67850:67858 LF.Imp <> s_compile prfax
R67860:67860 LF.Imp <> e:302 var
R67843:67847 LF.Imp <> stack:303 var
R67840:67841 LF.Imp <> st:301 var
R67875:67878 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R67865:67869 LF.Imp <> aeval def
R67874:67874 LF.Imp <> e:302 var
R67871:67872 LF.Imp <> st:301 var
R67879:67883 LF.Imp <> stack:303 var
prf 68005:68021 <> s_compile_correct
R68038:68042 LF.Imp <> state def
binder 68033:68034 <> st:304
R68050:68053 LF.Imp <> aexp ind
binder 68046:68046 <> e:305
R68088:68090 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68059:68067 LF.Imp <> s_execute prfax
R68076:68084 LF.Imp <> s_compile prfax
R68086:68086 LF.Imp <> e:305 var
R68072:68073 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R68069:68070 LF.Imp <> st:304 var
R68091:68092 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R68103:68104 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R68093:68097 LF.Imp <> aeval def
R68102:68102 LF.Imp <> e:305 var
R68099:68100 LF.Imp <> st:304 var
mod 69066:69073 <> BreakImp
ind 69412:69414 BreakImp com
constr 69430:69434 BreakImp CSkip
constr 69440:69445 BreakImp CBreak
constr 69489:69492 BreakImp CAss
constr 69522:69525 BreakImp CSeq
constr 69545:69547 BreakImp CIf
constr 69578:69583 BreakImp CWhile
R69499:69504 Coq.Strings.String <> string ind
binder 69495:69495 <> x:308
R69512:69515 LF.Imp <> aexp ind
binder 69508:69508 <> a:309
R69536:69538 LF.Imp <> com:306 ind
binder 69528:69529 <> c1:310
binder 69531:69532 <> c2:311
R69554:69557 LF.Imp <> bexp ind
binder 69550:69550 <> b:312
R69569:69571 LF.Imp <> com:306 ind
binder 69561:69562 <> c1:313
binder 69564:69565 <> c2:314
R69590:69593 LF.Imp <> bexp ind
binder 69586:69586 <> b:315
R69601:69603 LF.Imp <> com:306 ind
binder 69597:69597 <> c:316
R69630:69635 LF.Imp BreakImp CBreak constr
not 69617:69617 BreakImp :com::'break'
R69696:69700 LF.Imp BreakImp CSkip constr
not 69674:69674 BreakImp :com:com_scope:'skip'
R69774:69777 LF.Imp BreakImp CAss constr
not 69751:69751 BreakImp :com:com_scope:x_':='_x
R69933:69936 LF.Imp BreakImp CSeq constr
not 69912:69912 BreakImp :com:com_scope:x_';'_x
R70071:70073 LF.Imp BreakImp CIf constr
not 70025:70025 BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end'
R70238:70243 LF.Imp BreakImp CWhile constr
not 70200:70200 BreakImp :com:com_scope:'while'_x_'do'_x_'end'
ind 71380:71385 BreakImp result
constr 71401:71409 BreakImp SContinue
constr 71415:71420 BreakImp SBreak
ind 73855:73859 BreakImp ceval
constr 73910:73915 BreakImp E_Skip
R73866:73869 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73875:73878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73885:73888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73894:73897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73889:73893 LF.Imp <> state def
R73879:73884 LF.Imp BreakImp result ind
R73870:73874 LF.Imp <> state def
R73863:73865 LF.Imp BreakImp com ind
R74029:74033 LF.Imp <> ceval:320 ind
binder 73926:73927 <> st:321
R73938:73941 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R73947:73951 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R73954:73956 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R73942:73946 LF.Imp BreakImp CSkip constr
R73936:73937 LF.Imp <> st:321 var
R73957:73965 LF.Imp BreakImp SContinue constr
R73952:73953 LF.Imp <> st:321 var
R74029:74033 LF.Imp BreakImp ceval ind
not 73997:73997 BreakImp :::x_'=['_x_']=>'_x_'/'_x
prf 74131:74142 BreakImp break_ignore
binder 74153:74153 <> c:322
binder 74155:74156 <> st:323
binder 74158:74160 <> st':324
binder 74162:74162 <> s:325
R74196:74204 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74207:74209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74205:74206 LF.Imp <> st:323 var
R74210:74212 LF.Imp <> st':324 var
R74172:74175 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74184:74188 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74192:74194 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74181:74182 LF.Imp BreakImp :com:com_scope:x_';'_x not
R74176:74180 LF.Imp BreakImp :com::'break' not
R74183:74183 LF.Imp <> c:322 var
R74170:74171 LF.Imp <> st:323 var
R74195:74195 LF.Imp <> s:325 var
R74189:74191 LF.Imp <> st':324 var
prf 74262:74275 BreakImp while_continue
binder 74286:74286 <> b:326
binder 74288:74288 <> c:327
binder 74290:74291 <> st:328
binder 74293:74295 <> st':329
binder 74297:74297 <> s:330
R74336:74341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74343:74345 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74342:74342 LF.Imp <> s:330 var
R74346:74354 LF.Imp BreakImp SContinue constr
R74304:74307 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74324:74328 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74332:74334 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74308:74313 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R74315:74318 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R74320:74323 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R74314:74314 LF.Imp <> b:326 var
R74319:74319 LF.Imp <> c:327 var
R74302:74303 LF.Imp <> st:328 var
R74335:74335 LF.Imp <> s:330 var
R74329:74331 LF.Imp <> st':329 var
prf 74404:74423 BreakImp while_stops_on_break
binder 74434:74434 <> b:331
binder 74436:74436 <> c:332
binder 74438:74439 <> st:333
binder 74441:74443 <> st':334
R74465:74470 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74495:74500 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74503:74506 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74523:74527 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74531:74533 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74507:74512 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R74514:74517 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R74519:74522 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R74513:74513 LF.Imp <> b:331 var
R74518:74518 LF.Imp <> c:332 var
R74501:74502 LF.Imp <> st:333 var
R74534:74542 LF.Imp BreakImp SContinue constr
R74528:74530 LF.Imp <> st':334 var
R74473:74476 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74478:74482 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74486:74488 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74477:74477 LF.Imp <> c:332 var
R74471:74472 LF.Imp <> st:333 var
R74489:74494 LF.Imp BreakImp SBreak constr
R74483:74485 LF.Imp <> st':334 var
R74458:74460 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74448:74452 LF.Imp <> beval def
R74457:74457 LF.Imp <> b:331 var
R74454:74455 LF.Imp <> st:333 var
R74461:74464 LF.Imp <> :::'true' not
prf 74672:74687 BreakImp while_break_true
binder 74698:74698 <> b:335
binder 74700:74700 <> c:336
binder 74702:74703 <> st:337
binder 74705:74707 <> st':338
R74754:74759 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74778:74783 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74784:74790 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R74795:74796 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 74791:74794 <> st'':339
R74801:74804 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74806:74810 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74814:74816 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74805:74805 LF.Imp <> c:336 var
R74797:74800 LF.Imp <> st'':339 var
R74817:74822 LF.Imp BreakImp SBreak constr
R74811:74813 LF.Imp <> st':338 var
R74771:74773 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74760:74764 LF.Imp <> beval def
R74770:74770 LF.Imp <> b:335 var
R74766:74768 LF.Imp <> st':338 var
R74774:74777 LF.Imp <> :::'true' not
R74714:74717 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74734:74738 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74742:74744 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74718:74723 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R74725:74728 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R74730:74733 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R74724:74724 LF.Imp <> b:335 var
R74729:74729 LF.Imp <> c:336 var
R74712:74713 LF.Imp <> st:337 var
R74745:74753 LF.Imp BreakImp SContinue constr
R74739:74741 LF.Imp <> st':338 var
prf 74953:74971 BreakImp ceval_deterministic
R74984:74986 LF.Imp BreakImp com ind
binder 74982:74982 <> c:340
binder 74989:74990 <> st:341
binder 74992:74994 <> st1:342
binder 74996:74998 <> st2:343
binder 75000:75001 <> s1:344
binder 75003:75004 <> s2:345
R75032:75040 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75061:75069 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75079:75082 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R75073:75075 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75070:75072 LF.Imp <> st1:342 var
R75076:75078 LF.Imp <> st2:343 var
R75085:75087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75083:75084 LF.Imp <> s1:344 var
R75088:75089 LF.Imp <> s2:345 var
R75043:75046 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75048:75052 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75056:75058 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75047:75047 LF.Imp <> c:340 var
R75041:75042 LF.Imp <> st:341 var
R75059:75060 LF.Imp <> s2:345 var
R75053:75055 LF.Imp <> st2:343 var
R75014:75017 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75019:75023 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75027:75029 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75018:75018 LF.Imp <> c:340 var
R75012:75013 LF.Imp <> st:341 var
R75030:75031 LF.Imp <> s1:344 var
R75024:75026 LF.Imp <> st1:342 var
R75145:75152 LF.Imp BreakImp <> mod
